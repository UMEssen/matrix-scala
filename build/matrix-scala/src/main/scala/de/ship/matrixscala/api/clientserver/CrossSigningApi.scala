/**
  * <h1>matrix-scala</h1>
  * @version 1.0.0
  * @author kirill.sokol@uk-essen.de
  *
  * This file was generated.
  *
  * DO NOT EDIT THIS FILE. Any changes to this file will be overwritten
  * the next time the code is generated. If you need to modify the code
  * generated by this tool, make your changes to the generator script
  * and regenerate the code.
  */

package de.ship.matrixscala.api.clientserver

import de.ship.matrixscala.model.Definitions
import de.ship.matrixscala.model.clientserver.CrossSigningData._
import de.ship.matrixscala.json.clientserver.CrossSigningJsonFormats._
import de.ship.matrixscala.json.DefinitionFormats._
import de.ship.matrixscala.core._
import de.ship.matrixscala.core.ResponseMappings._
import de.ship.matrixscala.core.QueryBuilding._
import de.ship.matrixscala.core.HeaderBuilding._
import akka.http.scaladsl.model.HttpMethods
import spray.json.{JsObject, JsValue, RootJsonFormat}
import spray.json.DefaultJsonProtocol._

/**
  * @see "defined in ./build/matrix-spec/data/api/client-server/cross_signing.yaml"
  */
object CrossSigningApi {

  /**
    * <h1>uploadCrossSigningKeys</h1>
    *
    * Publishes cross-signing keys for the user.
    *
    * This API endpoint uses the [User-Interactive Authentication API](/client-server-api/#user-interactive-authentication-api).
    */
  def uploadCrossSigningKeys(
      body: UploadCrossSigningKeys.Body
  ): ApiRequest[AccessTokenAuthentication, UploadCrossSigningKeys.Body, JsObject] =
    ApiRequest(
      endpoint = "/_matrix/client/v3/keys/device_signing/upload",
      httpMethod = HttpMethods.POST,
      body = body,
      bodyFormat = implicitly[RootJsonFormat[UploadCrossSigningKeys.Body]],
      responseMappings = Seq(
        SingleResponseMapping(200, implicitly[RootJsonFormat[JsObject]])
      ),
      inQuery = Map.empty,
      inPath = Map.empty,
      inHeader = Map.empty
    )

  /**
    * <h1>uploadCrossSigningSignatures</h1>
    *
    * Publishes cross-signing signatures for the user.  The request body is a
    * map from user ID to key ID to signed JSON object.
    */
  def uploadCrossSigningSignatures(
      body: Map[String, Map[String, JsObject]]
  ): ApiRequest[AccessTokenAuthentication, Map[
    String,
    Map[String, JsObject]
  ], UploadCrossSigningSignatures.OK] =
    ApiRequest(
      endpoint = "/_matrix/client/v3/keys/signatures/upload",
      httpMethod = HttpMethods.POST,
      body = body,
      bodyFormat = implicitly[RootJsonFormat[Map[String, Map[String, JsObject]]]],
      responseMappings = Seq(
        SingleResponseMapping(200, implicitly[RootJsonFormat[UploadCrossSigningSignatures.OK]])
      ),
      inQuery = Map.empty,
      inPath = Map.empty,
      inHeader = Map.empty
    )

}
