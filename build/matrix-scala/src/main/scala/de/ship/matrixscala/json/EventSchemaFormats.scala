/**
  * <h1>matrix-scala</h1>
  * @version 1.0.0
  * @author kirill.sokol@uk-essen.de
  *
  * This file was generated.
  *
  * DO NOT EDIT THIS FILE. Any changes to this file will be overwritten
  * the next time the code is generated. If you need to modify the code
  * generated by this tool, make your changes to the generator script
  * and regenerate the code.
  */

package de.ship.matrixscala.json

import de.ship.matrixscala.core._
import de.ship.matrixscala.model.EventSchemas
import de.ship.matrixscala.json.core.CoreJsonFormats._
import de.ship.matrixscala.json.DefinitionFormats._

import spray.json._
import DefaultJsonProtocol._

object EventSchemaFormats {

  implicit val EventSchemasMTagTypeEnumFormat: RootJsonFormat[EventSchemas.MTag.TypeEnum.Value] =
    new EnumJsonConverter(EventSchemas.MTag.TypeEnum)

  implicit val EventSchemasMTagContentTagFormat: RootJsonFormat[EventSchemas.MTag.Content.Tag] =
    jsonFormat1(EventSchemas.MTag.Content.Tag.apply)

  implicit val EventSchemasMTagContentFormat: RootJsonFormat[EventSchemas.MTag.Content] =
    jsonFormat1(EventSchemas.MTag.Content.apply)

  implicit val EventSchemasMTagFormat: RootJsonFormat[EventSchemas.MTag] = jsonFormat2(
    EventSchemas.MTag.apply
  )

  implicit val EventSchemasMPolicyRuleRoomTypeEnumFormat
      : RootJsonFormat[EventSchemas.MPolicyRuleRoom.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MPolicyRuleRoom.TypeEnum
  )

  implicit val EventSchemasMPolicyRuleRoomFormat: RootJsonFormat[EventSchemas.MPolicyRuleRoom] =
    jsonFormat3(EventSchemas.MPolicyRuleRoom.apply)

  implicit val EventSchemasMRoomThirdPartyInviteContentPublicKeysFormat
      : RootJsonFormat[EventSchemas.MRoomThirdPartyInvite.Content.PublicKeys] = jsonFormat2(
    EventSchemas.MRoomThirdPartyInvite.Content.PublicKeys.apply
  )

  implicit val EventSchemasMRoomThirdPartyInviteContentFormat
      : RootJsonFormat[EventSchemas.MRoomThirdPartyInvite.Content] = jsonFormat4(
    EventSchemas.MRoomThirdPartyInvite.Content.apply
  )

  implicit val EventSchemasMRoomThirdPartyInviteTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomThirdPartyInvite.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomThirdPartyInvite.TypeEnum
  )

  implicit val EventSchemasMRoomThirdPartyInviteFormat
      : RootJsonFormat[EventSchemas.MRoomThirdPartyInvite] = jsonFormat3(
    EventSchemas.MRoomThirdPartyInvite.apply
  )

  implicit val EventSchemasMKeyVerificationRequestContentFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationRequest.Content] = jsonFormat4(
    EventSchemas.MKeyVerificationRequest.Content.apply
  )

  implicit val EventSchemasMKeyVerificationRequestTypeEnumFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationRequest.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MKeyVerificationRequest.TypeEnum
  )

  implicit val EventSchemasMKeyVerificationRequestFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationRequest] = jsonFormat2(
    EventSchemas.MKeyVerificationRequest.apply
  )

  implicit val EventSchemasMRoomMessageMFileContentFileInfoFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMFile.Content.FileInfo] = jsonFormat5(
    EventSchemas.MRoomMessageMFile.Content.FileInfo.apply
  )

  implicit val EventSchemasMRoomMessageMFileContentMsgtypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMFile.Content.MsgtypeEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomMessageMFile.Content.MsgtypeEnum)

  implicit val EventSchemasMRoomMessageMFileContentFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMFile.Content] = jsonFormat6(
    EventSchemas.MRoomMessageMFile.Content.apply
  )

  implicit val EventSchemasMRoomMessageMFileTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMFile.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomMessageMFile.TypeEnum
  )

  implicit val EventSchemasMRoomMessageMFileFormat: RootJsonFormat[EventSchemas.MRoomMessageMFile] =
    jsonFormat3(EventSchemas.MRoomMessageMFile.apply)

  implicit val EventSchemasMReceiptTypeEnumFormat
      : RootJsonFormat[EventSchemas.MReceipt.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MReceipt.TypeEnum
  )

  implicit val EventSchemasMReceiptFormat: RootJsonFormat[EventSchemas.MReceipt] = jsonFormat2(
    EventSchemas.MReceipt.apply
  )

  implicit val EventSchemasMIgnoredUserListContentFormat
      : RootJsonFormat[EventSchemas.MIgnoredUserList.Content] = jsonFormat1(
    EventSchemas.MIgnoredUserList.Content.apply
  )

  implicit val EventSchemasMIgnoredUserListTypeEnumFormat
      : RootJsonFormat[EventSchemas.MIgnoredUserList.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MIgnoredUserList.TypeEnum
  )

  implicit val EventSchemasMIgnoredUserListFormat: RootJsonFormat[EventSchemas.MIgnoredUserList] =
    jsonFormat2(EventSchemas.MIgnoredUserList.apply)

  implicit val EventSchemasMForwardedRoomKeyContentFormat
      : RootJsonFormat[EventSchemas.MForwardedRoomKey.Content] = jsonFormat8(
    EventSchemas.MForwardedRoomKey.Content.apply
  )

  implicit val EventSchemasMForwardedRoomKeyTypeEnumFormat
      : RootJsonFormat[EventSchemas.MForwardedRoomKey.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MForwardedRoomKey.TypeEnum
  )

  implicit val EventSchemasMForwardedRoomKeyFormat: RootJsonFormat[EventSchemas.MForwardedRoomKey] =
    jsonFormat2(EventSchemas.MForwardedRoomKey.apply)

  implicit val EventSchemasMSecretSendContentFormat
      : RootJsonFormat[EventSchemas.MSecretSend.Content] = jsonFormat2(
    EventSchemas.MSecretSend.Content.apply
  )

  implicit val EventSchemasMSecretSendTypeEnumFormat
      : RootJsonFormat[EventSchemas.MSecretSend.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MSecretSend.TypeEnum
  )

  implicit val EventSchemasMSecretSendFormat: RootJsonFormat[EventSchemas.MSecretSend] =
    jsonFormat2(EventSchemas.MSecretSend.apply)

  implicit val EventSchemasMRoomMessageMVideoContentVideoInfoFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMVideo.Content.VideoInfo] = jsonFormat8(
    EventSchemas.MRoomMessageMVideo.Content.VideoInfo.apply
  )

  implicit val EventSchemasMRoomMessageMVideoContentMsgtypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMVideo.Content.MsgtypeEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomMessageMVideo.Content.MsgtypeEnum)

  implicit val EventSchemasMRoomMessageMVideoContentFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMVideo.Content] = jsonFormat5(
    EventSchemas.MRoomMessageMVideo.Content.apply
  )

  implicit val EventSchemasMRoomMessageMVideoTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMVideo.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomMessageMVideo.TypeEnum
  )

  implicit val EventSchemasMRoomMessageMVideoFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMVideo] = jsonFormat3(
    EventSchemas.MRoomMessageMVideo.apply
  )

  implicit val EventSchemasMRoomKeyRequestContentRequestedKeyInfoFormat
      : RootJsonFormat[EventSchemas.MRoomKeyRequest.Content.RequestedKeyInfo] = jsonFormat4(
    EventSchemas.MRoomKeyRequest.Content.RequestedKeyInfo.apply
  )

  implicit val EventSchemasMRoomKeyRequestContentActionEnumFormat
      : RootJsonFormat[EventSchemas.MRoomKeyRequest.Content.ActionEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomKeyRequest.Content.ActionEnum)

  implicit val EventSchemasMRoomKeyRequestContentFormat
      : RootJsonFormat[EventSchemas.MRoomKeyRequest.Content] = jsonFormat4(
    EventSchemas.MRoomKeyRequest.Content.apply
  )

  implicit val EventSchemasMRoomKeyRequestTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomKeyRequest.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomKeyRequest.TypeEnum
  )

  implicit val EventSchemasMRoomKeyRequestFormat: RootJsonFormat[EventSchemas.MRoomKeyRequest] =
    jsonFormat2(EventSchemas.MRoomKeyRequest.apply)

  implicit val EventSchemasMRoomMessageContentFormat
      : RootJsonFormat[EventSchemas.MRoomMessage.Content] = jsonFormat2(
    EventSchemas.MRoomMessage.Content.apply
  )

  implicit val EventSchemasMRoomMessageTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMessage.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomMessage.TypeEnum
  )

  implicit val EventSchemasMRoomMessageFormat: RootJsonFormat[EventSchemas.MRoomMessage] =
    jsonFormat3(EventSchemas.MRoomMessage.apply)

  implicit val EventSchemasMKeyVerificationCancelContentFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationCancel.Content] = jsonFormat4(
    EventSchemas.MKeyVerificationCancel.Content.apply
  )

  implicit val EventSchemasMKeyVerificationCancelTypeEnumFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationCancel.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MKeyVerificationCancel.TypeEnum
  )

  implicit val EventSchemasMKeyVerificationCancelFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationCancel] = jsonFormat2(
    EventSchemas.MKeyVerificationCancel.apply
  )

  implicit val EventSchemasMStickerContentFormat: RootJsonFormat[EventSchemas.MSticker.Content] =
    jsonFormat3(EventSchemas.MSticker.Content.apply)

  implicit val EventSchemasMStickerTypeEnumFormat
      : RootJsonFormat[EventSchemas.MSticker.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MSticker.TypeEnum
  )

  implicit val EventSchemasMStickerFormat: RootJsonFormat[EventSchemas.MSticker] = jsonFormat3(
    EventSchemas.MSticker.apply
  )

  implicit val EventSchemasMKeyVerificationAcceptContentShortAuthenticationStringEnumFormat
      : RootJsonFormat[
        EventSchemas.MKeyVerificationAccept.Content.ShortAuthenticationStringEnum.Value
      ] = new EnumJsonConverter(
    EventSchemas.MKeyVerificationAccept.Content.ShortAuthenticationStringEnum
  )

  implicit val EventSchemasMKeyVerificationAcceptContentFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationAccept.Content] = jsonFormat7(
    EventSchemas.MKeyVerificationAccept.Content.apply
  )

  implicit val EventSchemasMKeyVerificationAcceptTypeEnumFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationAccept.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MKeyVerificationAccept.TypeEnum
  )

  implicit val EventSchemasMKeyVerificationAcceptFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationAccept] = jsonFormat2(
    EventSchemas.MKeyVerificationAccept.apply
  )

  implicit val EventSchemasMKeyVerificationStartMSasV1ContentMethodEnumFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationStartMSasV1.Content.MethodEnum.Value] =
    new EnumJsonConverter(EventSchemas.MKeyVerificationStartMSasV1.Content.MethodEnum)

  implicit val EventSchemasMKeyVerificationStartMSasV1ContentShortAuthenticationStringEnumFormat
      : RootJsonFormat[
        EventSchemas.MKeyVerificationStartMSasV1.Content.ShortAuthenticationStringEnum.Value
      ] = new EnumJsonConverter(
    EventSchemas.MKeyVerificationStartMSasV1.Content.ShortAuthenticationStringEnum
  )

  implicit val EventSchemasMKeyVerificationStartMSasV1ContentFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationStartMSasV1.Content] = jsonFormat8(
    EventSchemas.MKeyVerificationStartMSasV1.Content.apply
  )

  implicit val EventSchemasMKeyVerificationStartMSasV1TypeEnumFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationStartMSasV1.TypeEnum.Value] =
    new EnumJsonConverter(EventSchemas.MKeyVerificationStartMSasV1.TypeEnum)

  implicit val EventSchemasMKeyVerificationStartMSasV1Format
      : RootJsonFormat[EventSchemas.MKeyVerificationStartMSasV1] = jsonFormat2(
    EventSchemas.MKeyVerificationStartMSasV1.apply
  )

  implicit val EventSchemasMPushRulesContentFormat
      : RootJsonFormat[EventSchemas.MPushRules.Content] = jsonFormat1(
    EventSchemas.MPushRules.Content.apply
  )

  implicit val EventSchemasMPushRulesTypeEnumFormat
      : RootJsonFormat[EventSchemas.MPushRules.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MPushRules.TypeEnum
  )

  implicit val EventSchemasMPushRulesFormat: RootJsonFormat[EventSchemas.MPushRules] = jsonFormat2(
    EventSchemas.MPushRules.apply
  )

  implicit val EventSchemasMRoomPinnedEventsContentFormat
      : RootJsonFormat[EventSchemas.MRoomPinnedEvents.Content] = jsonFormat1(
    EventSchemas.MRoomPinnedEvents.Content.apply
  )

  implicit val EventSchemasMRoomPinnedEventsTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomPinnedEvents.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomPinnedEvents.TypeEnum
  )

  implicit val EventSchemasMRoomPinnedEventsFormat: RootJsonFormat[EventSchemas.MRoomPinnedEvents] =
    jsonFormat3(EventSchemas.MRoomPinnedEvents.apply)

  implicit val EventSchemasMPolicyRuleUserTypeEnumFormat
      : RootJsonFormat[EventSchemas.MPolicyRuleUser.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MPolicyRuleUser.TypeEnum
  )

  implicit val EventSchemasMPolicyRuleUserFormat: RootJsonFormat[EventSchemas.MPolicyRuleUser] =
    jsonFormat3(EventSchemas.MPolicyRuleUser.apply)

  implicit val EventSchemasMFullyReadContentFormat
      : RootJsonFormat[EventSchemas.MFullyRead.Content] = jsonFormat1(
    EventSchemas.MFullyRead.Content.apply
  )

  implicit val EventSchemasMFullyReadTypeEnumFormat
      : RootJsonFormat[EventSchemas.MFullyRead.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MFullyRead.TypeEnum
  )

  implicit val EventSchemasMFullyReadFormat: RootJsonFormat[EventSchemas.MFullyRead] = jsonFormat2(
    EventSchemas.MFullyRead.apply
  )

  implicit val EventSchemasMRoomHistoryVisibilityContentHistoryVisibilityEnumFormat
      : RootJsonFormat[EventSchemas.MRoomHistoryVisibility.Content.HistoryVisibilityEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomHistoryVisibility.Content.HistoryVisibilityEnum)

  implicit val EventSchemasMRoomHistoryVisibilityContentFormat
      : RootJsonFormat[EventSchemas.MRoomHistoryVisibility.Content] = jsonFormat1(
    EventSchemas.MRoomHistoryVisibility.Content.apply
  )

  implicit val EventSchemasMRoomHistoryVisibilityTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomHistoryVisibility.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomHistoryVisibility.TypeEnum
  )

  implicit val EventSchemasMRoomHistoryVisibilityFormat
      : RootJsonFormat[EventSchemas.MRoomHistoryVisibility] = jsonFormat3(
    EventSchemas.MRoomHistoryVisibility.apply
  )

  implicit val EventSchemasMRoomKeyContentAlgorithmEnumFormat
      : RootJsonFormat[EventSchemas.MRoomKey.Content.AlgorithmEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomKey.Content.AlgorithmEnum
  )

  implicit val EventSchemasMRoomKeyContentFormat: RootJsonFormat[EventSchemas.MRoomKey.Content] =
    jsonFormat4(EventSchemas.MRoomKey.Content.apply)

  implicit val EventSchemasMRoomKeyTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomKey.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomKey.TypeEnum
  )

  implicit val EventSchemasMRoomKeyFormat: RootJsonFormat[EventSchemas.MRoomKey] = jsonFormat2(
    EventSchemas.MRoomKey.apply
  )

  implicit val EventSchemasMSpaceChildContentFormat
      : RootJsonFormat[EventSchemas.MSpaceChild.Content] = jsonFormat3(
    EventSchemas.MSpaceChild.Content.apply
  )

  implicit val EventSchemasMSpaceChildTypeEnumFormat
      : RootJsonFormat[EventSchemas.MSpaceChild.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MSpaceChild.TypeEnum
  )

  implicit val EventSchemasMSpaceChildFormat: RootJsonFormat[EventSchemas.MSpaceChild] =
    jsonFormat3(EventSchemas.MSpaceChild.apply)

  implicit val EventSchemasMRoomServerAclContentFormat
      : RootJsonFormat[EventSchemas.MRoomServerAcl.Content] = jsonFormat3(
    EventSchemas.MRoomServerAcl.Content.apply
  )

  implicit val EventSchemasMRoomServerAclTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomServerAcl.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomServerAcl.TypeEnum
  )

  implicit val EventSchemasMRoomServerAclFormat: RootJsonFormat[EventSchemas.MRoomServerAcl] =
    jsonFormat3(EventSchemas.MRoomServerAcl.apply)

  implicit val EventSchemasMRoomEncryptedContentAlgorithmEnumFormat
      : RootJsonFormat[EventSchemas.MRoomEncrypted.Content.AlgorithmEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomEncrypted.Content.AlgorithmEnum)

  implicit val EventSchemasMRoomEncryptedContentFormat
      : RootJsonFormat[EventSchemas.MRoomEncrypted.Content] = jsonFormat5(
    EventSchemas.MRoomEncrypted.Content.apply
  )

  implicit val EventSchemasMRoomEncryptedTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomEncrypted.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomEncrypted.TypeEnum
  )

  implicit val EventSchemasMRoomEncryptedFormat: RootJsonFormat[EventSchemas.MRoomEncrypted] =
    jsonFormat2(EventSchemas.MRoomEncrypted.apply)

  implicit val EventSchemasMRoomMessageMTextContentMsgtypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMText.Content.MsgtypeEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomMessageMText.Content.MsgtypeEnum)

  implicit val EventSchemasMRoomMessageMTextContentFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMText.Content] = jsonFormat4(
    EventSchemas.MRoomMessageMText.Content.apply
  )

  implicit val EventSchemasMRoomMessageMTextTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMText.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomMessageMText.TypeEnum
  )

  implicit val EventSchemasMRoomMessageMTextFormat: RootJsonFormat[EventSchemas.MRoomMessageMText] =
    jsonFormat3(EventSchemas.MRoomMessageMText.apply)

  implicit val EventSchemasMRoomCanonicalAliasContentFormat
      : RootJsonFormat[EventSchemas.MRoomCanonicalAlias.Content] = jsonFormat2(
    EventSchemas.MRoomCanonicalAlias.Content.apply
  )

  implicit val EventSchemasMRoomCanonicalAliasTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomCanonicalAlias.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomCanonicalAlias.TypeEnum
  )

  implicit val EventSchemasMRoomCanonicalAliasFormat
      : RootJsonFormat[EventSchemas.MRoomCanonicalAlias] = jsonFormat3(
    EventSchemas.MRoomCanonicalAlias.apply
  )

  implicit val EventSchemasMRoomMessageMKeyVerificationRequestContentMsgtypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMKeyVerificationRequest.Content.MsgtypeEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomMessageMKeyVerificationRequest.Content.MsgtypeEnum)

  implicit val EventSchemasMRoomMessageMKeyVerificationRequestContentFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMKeyVerificationRequest.Content] = jsonFormat7(
    EventSchemas.MRoomMessageMKeyVerificationRequest.Content.apply
  )

  implicit val EventSchemasMRoomMessageMKeyVerificationRequestTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMKeyVerificationRequest.TypeEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomMessageMKeyVerificationRequest.TypeEnum)

  implicit val EventSchemasMRoomMessageMKeyVerificationRequestFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMKeyVerificationRequest] = jsonFormat3(
    EventSchemas.MRoomMessageMKeyVerificationRequest.apply
  )

  implicit val EventSchemasMRoomAvatarContentFormat
      : RootJsonFormat[EventSchemas.MRoomAvatar.Content] = jsonFormat2(
    EventSchemas.MRoomAvatar.Content.apply
  )

  implicit val EventSchemasMRoomAvatarTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomAvatar.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomAvatar.TypeEnum
  )

  implicit val EventSchemasMRoomAvatarFormat: RootJsonFormat[EventSchemas.MRoomAvatar] =
    jsonFormat3(EventSchemas.MRoomAvatar.apply)

  implicit val EventSchemasMKeyVerificationKeyContentFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationKey.Content] = jsonFormat3(
    EventSchemas.MKeyVerificationKey.Content.apply
  )

  implicit val EventSchemasMKeyVerificationKeyTypeEnumFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationKey.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MKeyVerificationKey.TypeEnum
  )

  implicit val EventSchemasMKeyVerificationKeyFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationKey] = jsonFormat2(
    EventSchemas.MKeyVerificationKey.apply
  )

  implicit val EventSchemasMRoomMessageMEmoteContentMsgtypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMEmote.Content.MsgtypeEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomMessageMEmote.Content.MsgtypeEnum)

  implicit val EventSchemasMRoomMessageMEmoteContentFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMEmote.Content] = jsonFormat4(
    EventSchemas.MRoomMessageMEmote.Content.apply
  )

  implicit val EventSchemasMRoomMessageMEmoteTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMEmote.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomMessageMEmote.TypeEnum
  )

  implicit val EventSchemasMRoomMessageMEmoteFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMEmote] = jsonFormat3(
    EventSchemas.MRoomMessageMEmote.apply
  )

  implicit val EventSchemasMKeyVerificationMacContentFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationMac.Content] = jsonFormat4(
    EventSchemas.MKeyVerificationMac.Content.apply
  )

  implicit val EventSchemasMKeyVerificationMacTypeEnumFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationMac.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MKeyVerificationMac.TypeEnum
  )

  implicit val EventSchemasMKeyVerificationMacFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationMac] = jsonFormat2(
    EventSchemas.MKeyVerificationMac.apply
  )

  implicit val EventSchemasMCallHangupContentReasonEnumFormat
      : RootJsonFormat[EventSchemas.MCallHangup.Content.ReasonEnum.Value] = new EnumJsonConverter(
    EventSchemas.MCallHangup.Content.ReasonEnum
  )

  implicit val EventSchemasMCallHangupContentFormat
      : RootJsonFormat[EventSchemas.MCallHangup.Content] = jsonFormat3(
    EventSchemas.MCallHangup.Content.apply
  )

  implicit val EventSchemasMCallHangupTypeEnumFormat
      : RootJsonFormat[EventSchemas.MCallHangup.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MCallHangup.TypeEnum
  )

  implicit val EventSchemasMCallHangupFormat: RootJsonFormat[EventSchemas.MCallHangup] =
    jsonFormat3(EventSchemas.MCallHangup.apply)

  implicit val EventSchemasMRoomCreateContentPreviousRoomFormat
      : RootJsonFormat[EventSchemas.MRoomCreate.Content.PreviousRoom] = jsonFormat2(
    EventSchemas.MRoomCreate.Content.PreviousRoom.apply
  )

  implicit val EventSchemasMRoomCreateContentFormat
      : RootJsonFormat[EventSchemas.MRoomCreate.Content] = jsonFormat5(
    EventSchemas.MRoomCreate.Content.apply
  )

  implicit val EventSchemasMRoomCreateTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomCreate.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomCreate.TypeEnum
  )

  implicit val EventSchemasMRoomCreateFormat: RootJsonFormat[EventSchemas.MRoomCreate] =
    jsonFormat3(EventSchemas.MRoomCreate.apply)

  implicit val EventSchemasMRoomMessageMImageContentMsgtypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMImage.Content.MsgtypeEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomMessageMImage.Content.MsgtypeEnum)

  implicit val EventSchemasMRoomMessageMImageContentFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMImage.Content] = jsonFormat5(
    EventSchemas.MRoomMessageMImage.Content.apply
  )

  implicit val EventSchemasMRoomMessageMImageTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMImage.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomMessageMImage.TypeEnum
  )

  implicit val EventSchemasMRoomMessageMImageFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMImage] = jsonFormat3(
    EventSchemas.MRoomMessageMImage.apply
  )

  implicit val EventSchemasMReactionContentReactionRelatesToRelTypeEnumFormat
      : RootJsonFormat[EventSchemas.MReaction.Content.ReactionRelatesTo.RelTypeEnum.Value] =
    new EnumJsonConverter(EventSchemas.MReaction.Content.ReactionRelatesTo.RelTypeEnum)

  implicit val EventSchemasMReactionContentReactionRelatesToFormat
      : RootJsonFormat[EventSchemas.MReaction.Content.ReactionRelatesTo] = jsonFormat3(
    EventSchemas.MReaction.Content.ReactionRelatesTo.apply
  )

  implicit val EventSchemasMReactionContentFormat: RootJsonFormat[EventSchemas.MReaction.Content] =
    jsonFormat1(EventSchemas.MReaction.Content.apply)

  implicit val EventSchemasMReactionFormat: RootJsonFormat[EventSchemas.MReaction] = jsonFormat2(
    EventSchemas.MReaction.apply
  )

  implicit val EventSchemasMRoomMessageMLocationContentMsgtypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMLocation.Content.MsgtypeEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomMessageMLocation.Content.MsgtypeEnum)

  implicit val EventSchemasMRoomMessageMLocationContentLocationInfoFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMLocation.Content.LocationInfo] = jsonFormat3(
    EventSchemas.MRoomMessageMLocation.Content.LocationInfo.apply
  )

  implicit val EventSchemasMRoomMessageMLocationContentFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMLocation.Content] = jsonFormat4(
    EventSchemas.MRoomMessageMLocation.Content.apply
  )

  implicit val EventSchemasMRoomMessageMLocationTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMLocation.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomMessageMLocation.TypeEnum
  )

  implicit val EventSchemasMRoomMessageMLocationFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMLocation] = jsonFormat3(
    EventSchemas.MRoomMessageMLocation.apply
  )

  implicit val EventSchemasMDummyContentFormat: RootJsonFormat[EventSchemas.MDummy.Content] =
    jsonFormat0(EventSchemas.MDummy.Content.apply)

  implicit val EventSchemasMDummyTypeEnumFormat
      : RootJsonFormat[EventSchemas.MDummy.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MDummy.TypeEnum
  )

  implicit val EventSchemasMDummyFormat: RootJsonFormat[EventSchemas.MDummy] = jsonFormat2(
    EventSchemas.MDummy.apply
  )

  implicit val EventSchemasMCallAnswerContentAnswerTypeEnumFormat
      : RootJsonFormat[EventSchemas.MCallAnswer.Content.Answer.TypeEnum.Value] =
    new EnumJsonConverter(EventSchemas.MCallAnswer.Content.Answer.TypeEnum)

  implicit val EventSchemasMCallAnswerContentAnswerFormat
      : RootJsonFormat[EventSchemas.MCallAnswer.Content.Answer] = jsonFormat2(
    EventSchemas.MCallAnswer.Content.Answer.apply
  )

  implicit val EventSchemasMCallAnswerContentFormat
      : RootJsonFormat[EventSchemas.MCallAnswer.Content] = jsonFormat3(
    EventSchemas.MCallAnswer.Content.apply
  )

  implicit val EventSchemasMCallAnswerTypeEnumFormat
      : RootJsonFormat[EventSchemas.MCallAnswer.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MCallAnswer.TypeEnum
  )

  implicit val EventSchemasMCallAnswerFormat: RootJsonFormat[EventSchemas.MCallAnswer] =
    jsonFormat3(EventSchemas.MCallAnswer.apply)

  implicit val EventSchemasMRoomTombstoneContentFormat
      : RootJsonFormat[EventSchemas.MRoomTombstone.Content] = jsonFormat2(
    EventSchemas.MRoomTombstone.Content.apply
  )

  implicit val EventSchemasMRoomTombstoneTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomTombstone.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomTombstone.TypeEnum
  )

  implicit val EventSchemasMRoomTombstoneFormat: RootJsonFormat[EventSchemas.MRoomTombstone] =
    jsonFormat3(EventSchemas.MRoomTombstone.apply)

  implicit val EventSchemasMRoomJoinRulesContentJoinRuleEnumFormat
      : RootJsonFormat[EventSchemas.MRoomJoinRules.Content.JoinRuleEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomJoinRules.Content.JoinRuleEnum)

  implicit val EventSchemasMRoomJoinRulesContentAllowConditionTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomJoinRules.Content.AllowCondition.TypeEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomJoinRules.Content.AllowCondition.TypeEnum)

  implicit val EventSchemasMRoomJoinRulesContentAllowConditionFormat
      : RootJsonFormat[EventSchemas.MRoomJoinRules.Content.AllowCondition] = jsonFormat2(
    EventSchemas.MRoomJoinRules.Content.AllowCondition.apply
  )

  implicit val EventSchemasMRoomJoinRulesContentFormat
      : RootJsonFormat[EventSchemas.MRoomJoinRules.Content] = jsonFormat2(
    EventSchemas.MRoomJoinRules.Content.apply
  )

  implicit val EventSchemasMRoomJoinRulesTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomJoinRules.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomJoinRules.TypeEnum
  )

  implicit val EventSchemasMRoomJoinRulesFormat: RootJsonFormat[EventSchemas.MRoomJoinRules] =
    jsonFormat3(EventSchemas.MRoomJoinRules.apply)

  implicit val EventSchemasMRoomNameContentFormat: RootJsonFormat[EventSchemas.MRoomName.Content] =
    jsonFormat1(EventSchemas.MRoomName.Content.apply)

  implicit val EventSchemasMRoomNameTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomName.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomName.TypeEnum
  )

  implicit val EventSchemasMRoomNameFormat: RootJsonFormat[EventSchemas.MRoomName] = jsonFormat3(
    EventSchemas.MRoomName.apply
  )

  implicit val EventSchemasMRoomGuestAccessContentGuestAccessEnumFormat
      : RootJsonFormat[EventSchemas.MRoomGuestAccess.Content.GuestAccessEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomGuestAccess.Content.GuestAccessEnum)

  implicit val EventSchemasMRoomGuestAccessContentFormat
      : RootJsonFormat[EventSchemas.MRoomGuestAccess.Content] = jsonFormat1(
    EventSchemas.MRoomGuestAccess.Content.apply
  )

  implicit val EventSchemasMRoomGuestAccessTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomGuestAccess.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomGuestAccess.TypeEnum
  )

  implicit val EventSchemasMRoomGuestAccessFormat: RootJsonFormat[EventSchemas.MRoomGuestAccess] =
    jsonFormat3(EventSchemas.MRoomGuestAccess.apply)

  implicit val EventSchemasMRoomMessageMServerNoticeContentMsgtypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMServerNotice.Content.MsgtypeEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomMessageMServerNotice.Content.MsgtypeEnum)

  implicit val EventSchemasMRoomMessageMServerNoticeContentFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMServerNotice.Content] = jsonFormat5(
    EventSchemas.MRoomMessageMServerNotice.Content.apply
  )

  implicit val EventSchemasMRoomMessageMServerNoticeTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMServerNotice.TypeEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomMessageMServerNotice.TypeEnum)

  implicit val EventSchemasMRoomMessageMServerNoticeFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMServerNotice] = jsonFormat3(
    EventSchemas.MRoomMessageMServerNotice.apply
  )

  implicit val EventSchemasMIdentityServerContentFormat
      : RootJsonFormat[EventSchemas.MIdentityServer.Content] = jsonFormat1(
    EventSchemas.MIdentityServer.Content.apply
  )

  implicit val EventSchemasMIdentityServerTypeEnumFormat
      : RootJsonFormat[EventSchemas.MIdentityServer.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MIdentityServer.TypeEnum
  )

  implicit val EventSchemasMIdentityServerFormat: RootJsonFormat[EventSchemas.MIdentityServer] =
    jsonFormat2(EventSchemas.MIdentityServer.apply)

  implicit val EventSchemasMTypingContentFormat: RootJsonFormat[EventSchemas.MTyping.Content] =
    jsonFormat1(EventSchemas.MTyping.Content.apply)

  implicit val EventSchemasMTypingTypeEnumFormat
      : RootJsonFormat[EventSchemas.MTyping.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MTyping.TypeEnum
  )

  implicit val EventSchemasMTypingFormat: RootJsonFormat[EventSchemas.MTyping] = jsonFormat2(
    EventSchemas.MTyping.apply
  )

  implicit val EventSchemasMRoomPowerLevelsContentNotificationsFormat
      : RootJsonFormat[EventSchemas.MRoomPowerLevels.Content.Notifications] = jsonFormat1(
    EventSchemas.MRoomPowerLevels.Content.Notifications.apply
  )

  implicit val EventSchemasMRoomPowerLevelsContentFormat
      : RootJsonFormat[EventSchemas.MRoomPowerLevels.Content] = jsonFormat10(
    EventSchemas.MRoomPowerLevels.Content.apply
  )

  implicit val EventSchemasMRoomPowerLevelsTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomPowerLevels.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomPowerLevels.TypeEnum
  )

  implicit val EventSchemasMRoomPowerLevelsFormat: RootJsonFormat[EventSchemas.MRoomPowerLevels] =
    jsonFormat3(EventSchemas.MRoomPowerLevels.apply)

  implicit val EventSchemasMKeyVerificationStartContentFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationStart.Content] = jsonFormat5(
    EventSchemas.MKeyVerificationStart.Content.apply
  )

  implicit val EventSchemasMKeyVerificationStartTypeEnumFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationStart.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MKeyVerificationStart.TypeEnum
  )

  implicit val EventSchemasMKeyVerificationStartFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationStart] = jsonFormat2(
    EventSchemas.MKeyVerificationStart.apply
  )

  implicit val EventSchemasMRoomMemberEventContentMembershipEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMember.EventContent.MembershipEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomMember.EventContent.MembershipEnum)

  implicit val EventSchemasMRoomMemberEventContentInviteSignedFormat
      : RootJsonFormat[EventSchemas.MRoomMember.EventContent.Invite.Signed] = jsonFormat3(
    EventSchemas.MRoomMember.EventContent.Invite.Signed.apply
  )

  implicit val EventSchemasMRoomMemberEventContentInviteFormat
      : RootJsonFormat[EventSchemas.MRoomMember.EventContent.Invite] = jsonFormat2(
    EventSchemas.MRoomMember.EventContent.Invite.apply
  )

  implicit val EventSchemasMRoomMemberEventContentFormat
      : RootJsonFormat[EventSchemas.MRoomMember.EventContent] = jsonFormat7(
    EventSchemas.MRoomMember.EventContent.apply
  )

  implicit val EventSchemasMRoomMemberTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMember.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomMember.TypeEnum
  )

  implicit val EventSchemasMRoomMemberUnsignedCompositeFormat
      : RootJsonFormat[EventSchemas.MRoomMember.Unsigned.Composite] = jsonFormat2(
    EventSchemas.MRoomMember.Unsigned.Composite.apply
  )

  implicit val EventSchemasMRoomMemberUnsignedFormat
      : RootJsonFormat[EventSchemas.MRoomMember.Unsigned] = jsonFormat3(
    EventSchemas.MRoomMember.Unsigned.apply
  )

  implicit val EventSchemasMRoomMemberFormat: RootJsonFormat[EventSchemas.MRoomMember] =
    jsonFormat4(EventSchemas.MRoomMember.apply)

  implicit val EventSchemasMPresenceContentPresenceEnumFormat
      : RootJsonFormat[EventSchemas.MPresence.Content.PresenceEnum.Value] = new EnumJsonConverter(
    EventSchemas.MPresence.Content.PresenceEnum
  )

  implicit val EventSchemasMPresenceContentFormat: RootJsonFormat[EventSchemas.MPresence.Content] =
    jsonFormat6(EventSchemas.MPresence.Content.apply)

  implicit val EventSchemasMPresenceTypeEnumFormat
      : RootJsonFormat[EventSchemas.MPresence.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MPresence.TypeEnum
  )

  implicit val EventSchemasMPresenceFormat: RootJsonFormat[EventSchemas.MPresence] = jsonFormat3(
    EventSchemas.MPresence.apply
  )

  implicit val EventSchemasMKeyVerificationReadyContentFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationReady.Content] = jsonFormat4(
    EventSchemas.MKeyVerificationReady.Content.apply
  )

  implicit val EventSchemasMKeyVerificationReadyTypeEnumFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationReady.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MKeyVerificationReady.TypeEnum
  )

  implicit val EventSchemasMKeyVerificationReadyFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationReady] = jsonFormat2(
    EventSchemas.MKeyVerificationReady.apply
  )

  implicit val EventSchemasMKeyVerificationMRelatesToRelTypeEnumFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationMRelatesTo.RelTypeEnum.Value] =
    new EnumJsonConverter(EventSchemas.MKeyVerificationMRelatesTo.RelTypeEnum)

  implicit val EventSchemasMKeyVerificationMRelatesToFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationMRelatesTo] = jsonFormat2(
    EventSchemas.MKeyVerificationMRelatesTo.apply
  )

  implicit val EventSchemasMRoomTopicContentFormat
      : RootJsonFormat[EventSchemas.MRoomTopic.Content] = jsonFormat1(
    EventSchemas.MRoomTopic.Content.apply
  )

  implicit val EventSchemasMRoomTopicTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomTopic.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomTopic.TypeEnum
  )

  implicit val EventSchemasMRoomTopicFormat: RootJsonFormat[EventSchemas.MRoomTopic] = jsonFormat3(
    EventSchemas.MRoomTopic.apply
  )

  implicit val EventSchemasMPolicyRuleServerTypeEnumFormat
      : RootJsonFormat[EventSchemas.MPolicyRuleServer.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MPolicyRuleServer.TypeEnum
  )

  implicit val EventSchemasMPolicyRuleServerFormat: RootJsonFormat[EventSchemas.MPolicyRuleServer] =
    jsonFormat3(EventSchemas.MPolicyRuleServer.apply)

  implicit val EventSchemasMKeyVerificationStartMReciprocateV1ContentMethodEnumFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationStartMReciprocateV1.Content.MethodEnum.Value] =
    new EnumJsonConverter(EventSchemas.MKeyVerificationStartMReciprocateV1.Content.MethodEnum)

  implicit val EventSchemasMKeyVerificationStartMReciprocateV1ContentFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationStartMReciprocateV1.Content] = jsonFormat5(
    EventSchemas.MKeyVerificationStartMReciprocateV1.Content.apply
  )

  implicit val EventSchemasMKeyVerificationStartMReciprocateV1TypeEnumFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationStartMReciprocateV1.TypeEnum.Value] =
    new EnumJsonConverter(EventSchemas.MKeyVerificationStartMReciprocateV1.TypeEnum)

  implicit val EventSchemasMKeyVerificationStartMReciprocateV1Format
      : RootJsonFormat[EventSchemas.MKeyVerificationStartMReciprocateV1] = jsonFormat2(
    EventSchemas.MKeyVerificationStartMReciprocateV1.apply
  )

  implicit val EventSchemasMRoomKeyWithheldContentAlgorithmEnumFormat
      : RootJsonFormat[EventSchemas.MRoomKeyWithheld.Content.AlgorithmEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomKeyWithheld.Content.AlgorithmEnum)

  implicit val EventSchemasMRoomKeyWithheldContentCodeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomKeyWithheld.Content.CodeEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomKeyWithheld.Content.CodeEnum)

  implicit val EventSchemasMRoomKeyWithheldContentFormat
      : RootJsonFormat[EventSchemas.MRoomKeyWithheld.Content] = jsonFormat6(
    EventSchemas.MRoomKeyWithheld.Content.apply
  )

  implicit val EventSchemasMRoomKeyWithheldTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomKeyWithheld.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomKeyWithheld.TypeEnum
  )

  implicit val EventSchemasMRoomKeyWithheldFormat: RootJsonFormat[EventSchemas.MRoomKeyWithheld] =
    jsonFormat2(EventSchemas.MRoomKeyWithheld.apply)

  implicit val EventSchemasMCallInviteContentOfferTypeEnumFormat
      : RootJsonFormat[EventSchemas.MCallInvite.Content.Offer.TypeEnum.Value] =
    new EnumJsonConverter(EventSchemas.MCallInvite.Content.Offer.TypeEnum)

  implicit val EventSchemasMCallInviteContentOfferFormat
      : RootJsonFormat[EventSchemas.MCallInvite.Content.Offer] = jsonFormat2(
    EventSchemas.MCallInvite.Content.Offer.apply
  )

  implicit val EventSchemasMCallInviteContentFormat
      : RootJsonFormat[EventSchemas.MCallInvite.Content] = jsonFormat4(
    EventSchemas.MCallInvite.Content.apply
  )

  implicit val EventSchemasMCallInviteTypeEnumFormat
      : RootJsonFormat[EventSchemas.MCallInvite.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MCallInvite.TypeEnum
  )

  implicit val EventSchemasMCallInviteFormat: RootJsonFormat[EventSchemas.MCallInvite] =
    jsonFormat3(EventSchemas.MCallInvite.apply)

  implicit val EventSchemasMSecretRequestContentActionEnumFormat
      : RootJsonFormat[EventSchemas.MSecretRequest.Content.ActionEnum.Value] =
    new EnumJsonConverter(EventSchemas.MSecretRequest.Content.ActionEnum)

  implicit val EventSchemasMSecretRequestContentFormat
      : RootJsonFormat[EventSchemas.MSecretRequest.Content] = jsonFormat4(
    EventSchemas.MSecretRequest.Content.apply
  )

  implicit val EventSchemasMSecretRequestTypeEnumFormat
      : RootJsonFormat[EventSchemas.MSecretRequest.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MSecretRequest.TypeEnum
  )

  implicit val EventSchemasMSecretRequestFormat: RootJsonFormat[EventSchemas.MSecretRequest] =
    jsonFormat2(EventSchemas.MSecretRequest.apply)

  implicit val EventSchemasMRoomEncryptionContentAlgorithmEnumFormat
      : RootJsonFormat[EventSchemas.MRoomEncryption.Content.AlgorithmEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomEncryption.Content.AlgorithmEnum)

  implicit val EventSchemasMRoomEncryptionContentFormat
      : RootJsonFormat[EventSchemas.MRoomEncryption.Content] = jsonFormat3(
    EventSchemas.MRoomEncryption.Content.apply
  )

  implicit val EventSchemasMRoomEncryptionTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomEncryption.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomEncryption.TypeEnum
  )

  implicit val EventSchemasMRoomEncryptionFormat: RootJsonFormat[EventSchemas.MRoomEncryption] =
    jsonFormat3(EventSchemas.MRoomEncryption.apply)

  implicit val EventSchemasMDirectTypeEnumFormat
      : RootJsonFormat[EventSchemas.MDirect.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MDirect.TypeEnum
  )

  implicit val EventSchemasMDirectFormat: RootJsonFormat[EventSchemas.MDirect] = jsonFormat2(
    EventSchemas.MDirect.apply
  )

  implicit val EventSchemasMRoomMessageMNoticeContentMsgtypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMNotice.Content.MsgtypeEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomMessageMNotice.Content.MsgtypeEnum)

  implicit val EventSchemasMRoomMessageMNoticeContentFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMNotice.Content] = jsonFormat4(
    EventSchemas.MRoomMessageMNotice.Content.apply
  )

  implicit val EventSchemasMRoomMessageMNoticeTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMNotice.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomMessageMNotice.TypeEnum
  )

  implicit val EventSchemasMRoomMessageMNoticeFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMNotice] = jsonFormat3(
    EventSchemas.MRoomMessageMNotice.apply
  )

  implicit val EventSchemasMCallCandidatesContentCandidateFormat
      : RootJsonFormat[EventSchemas.MCallCandidates.Content.Candidate] = jsonFormat3(
    EventSchemas.MCallCandidates.Content.Candidate.apply
  )

  implicit val EventSchemasMCallCandidatesContentFormat
      : RootJsonFormat[EventSchemas.MCallCandidates.Content] = jsonFormat3(
    EventSchemas.MCallCandidates.Content.apply
  )

  implicit val EventSchemasMCallCandidatesTypeEnumFormat
      : RootJsonFormat[EventSchemas.MCallCandidates.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MCallCandidates.TypeEnum
  )

  implicit val EventSchemasMCallCandidatesFormat: RootJsonFormat[EventSchemas.MCallCandidates] =
    jsonFormat3(EventSchemas.MCallCandidates.apply)

  implicit val EventSchemasMRoomRedactionContentFormat
      : RootJsonFormat[EventSchemas.MRoomRedaction.Content] = jsonFormat1(
    EventSchemas.MRoomRedaction.Content.apply
  )

  implicit val EventSchemasMRoomRedactionTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomRedaction.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomRedaction.TypeEnum
  )

  implicit val EventSchemasMRoomRedactionFormat: RootJsonFormat[EventSchemas.MRoomRedaction] =
    jsonFormat4(EventSchemas.MRoomRedaction.apply)

  implicit val EventSchemasMKeyVerificationDoneContentFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationDone.Content] = jsonFormat2(
    EventSchemas.MKeyVerificationDone.Content.apply
  )

  implicit val EventSchemasMKeyVerificationDoneTypeEnumFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationDone.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MKeyVerificationDone.TypeEnum
  )

  implicit val EventSchemasMKeyVerificationDoneFormat
      : RootJsonFormat[EventSchemas.MKeyVerificationDone] = jsonFormat2(
    EventSchemas.MKeyVerificationDone.apply
  )

  implicit val EventSchemasMAcceptedTermsContentFormat
      : RootJsonFormat[EventSchemas.MAcceptedTerms.Content] = jsonFormat1(
    EventSchemas.MAcceptedTerms.Content.apply
  )

  implicit val EventSchemasMAcceptedTermsTypeEnumFormat
      : RootJsonFormat[EventSchemas.MAcceptedTerms.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MAcceptedTerms.TypeEnum
  )

  implicit val EventSchemasMAcceptedTermsFormat: RootJsonFormat[EventSchemas.MAcceptedTerms] =
    jsonFormat2(EventSchemas.MAcceptedTerms.apply)

  implicit val EventSchemasMRoomMessageMAudioContentAudioInfoFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMAudio.Content.AudioInfo] = jsonFormat3(
    EventSchemas.MRoomMessageMAudio.Content.AudioInfo.apply
  )

  implicit val EventSchemasMRoomMessageMAudioContentMsgtypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMAudio.Content.MsgtypeEnum.Value] =
    new EnumJsonConverter(EventSchemas.MRoomMessageMAudio.Content.MsgtypeEnum)

  implicit val EventSchemasMRoomMessageMAudioContentFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMAudio.Content] = jsonFormat5(
    EventSchemas.MRoomMessageMAudio.Content.apply
  )

  implicit val EventSchemasMRoomMessageMAudioTypeEnumFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMAudio.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MRoomMessageMAudio.TypeEnum
  )

  implicit val EventSchemasMRoomMessageMAudioFormat
      : RootJsonFormat[EventSchemas.MRoomMessageMAudio] = jsonFormat3(
    EventSchemas.MRoomMessageMAudio.apply
  )

  implicit val EventSchemasMSpaceParentContentFormat
      : RootJsonFormat[EventSchemas.MSpaceParent.Content] = jsonFormat2(
    EventSchemas.MSpaceParent.Content.apply
  )

  implicit val EventSchemasMSpaceParentTypeEnumFormat
      : RootJsonFormat[EventSchemas.MSpaceParent.TypeEnum.Value] = new EnumJsonConverter(
    EventSchemas.MSpaceParent.TypeEnum
  )

  implicit val EventSchemasMSpaceParentFormat: RootJsonFormat[EventSchemas.MSpaceParent] =
    jsonFormat3(EventSchemas.MSpaceParent.apply)

}
