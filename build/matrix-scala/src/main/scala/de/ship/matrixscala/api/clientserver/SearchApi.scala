/**
  * <h1>matrix-scala</h1>
  * @version 1.0.0
  * @author kirill.sokol@uk-essen.de
  *
  * This file was generated.
  *
  * DO NOT EDIT THIS FILE. Any changes to this file will be overwritten
  * the next time the code is generated. If you need to modify the code
  * generated by this tool, make your changes to the generator script
  * and regenerate the code.
  */

package de.ship.matrixscala.api.clientserver

import de.ship.matrixscala.model.Definitions
import de.ship.matrixscala.model.clientserver.SearchData._
import de.ship.matrixscala.json.clientserver.SearchJsonFormats._
import de.ship.matrixscala.json.DefinitionFormats._
import de.ship.matrixscala.core._
import de.ship.matrixscala.core.ResponseMappings._
import de.ship.matrixscala.core.QueryBuilding._
import de.ship.matrixscala.core.HeaderBuilding._
import akka.http.scaladsl.model.HttpMethods
import spray.json.{JsObject, JsValue, RootJsonFormat}
import spray.json.DefaultJsonProtocol._

/**
  * @see "defined in ./build/matrix-spec/data/api/client-server/search.yaml"
  */
object SearchApi {

  /**
    * <h1>search</h1>
    *
    * Performs a full text search across different categories.
    *
    * @param next_batch The point to return events from. If given, this should be a
    * `next_batch` result from a previous call to this endpoint.
    */
  def search(
      body: Search.Body,
      next_batch: Option[String] = None
  ): ApiRequest[AccessTokenAuthentication, Search.Body, Search.Results] =
    ApiRequest(
      endpoint = "/_matrix/client/v3/search",
      httpMethod = HttpMethods.POST,
      body = body,
      bodyFormat = implicitly[RootJsonFormat[Search.Body]],
      responseMappings = Seq(
        SingleResponseMapping(200, implicitly[RootJsonFormat[Search.Results]])
      ),
      inQuery = buildQuery(
        fromQueryEntry[Option[String]]("next_batch" -> next_batch)
      ),
      inPath = Map.empty,
      inHeader = Map.empty
    )

}
