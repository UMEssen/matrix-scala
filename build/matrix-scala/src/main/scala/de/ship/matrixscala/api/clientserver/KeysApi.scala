/**
  * <h1>matrix-scala</h1>
  * @version 1.0.0
  * @author kirill.sokol@uk-essen.de
  *
  * This file was generated.
  *
  * DO NOT EDIT THIS FILE. Any changes to this file will be overwritten
  * the next time the code is generated. If you need to modify the code
  * generated by this tool, make your changes to the generator script
  * and regenerate the code.
  */

package de.ship.matrixscala.api.clientserver

import de.ship.matrixscala.model.Definitions
import de.ship.matrixscala.model.clientserver.KeysData._
import de.ship.matrixscala.json.clientserver.KeysJsonFormats._
import de.ship.matrixscala.json.DefinitionFormats._
import de.ship.matrixscala.core._
import de.ship.matrixscala.core.ResponseMappings._
import de.ship.matrixscala.core.QueryBuilding._
import de.ship.matrixscala.core.HeaderBuilding._
import akka.http.scaladsl.model.HttpMethods
import spray.json.{JsObject, JsValue, RootJsonFormat}
import spray.json.DefaultJsonProtocol._

/**
  * @see "defined in ./build/matrix-spec/data/api/client-server/keys.yaml"
  */
object KeysApi {

  /**
    * <h1>uploadKeys</h1>
    *
    * Publishes end-to-end encryption keys for the device.
    */
  def uploadKeys(
      body: UploadKeys.Body
  ): ApiRequest[AccessTokenAuthentication, UploadKeys.Body, UploadKeys.OK] =
    ApiRequest(
      endpoint = "/_matrix/client/v3/keys/upload",
      httpMethod = HttpMethods.POST,
      body = body,
      bodyFormat = implicitly[RootJsonFormat[UploadKeys.Body]],
      responseMappings = Seq(
        SingleResponseMapping(200, implicitly[RootJsonFormat[UploadKeys.OK]])
      ),
      inQuery = Map.empty,
      inPath = Map.empty,
      inHeader = Map.empty
    )

  /**
    * <h1>queryKeys</h1>
    *
    * Returns the current devices and identity keys for the given users.
    */
  def queryKeys(
      body: QueryKeys.Body
  ): ApiRequest[AccessTokenAuthentication, QueryKeys.Body, QueryKeys.OK] =
    ApiRequest(
      endpoint = "/_matrix/client/v3/keys/query",
      httpMethod = HttpMethods.POST,
      body = body,
      bodyFormat = implicitly[RootJsonFormat[QueryKeys.Body]],
      responseMappings = Seq(
        SingleResponseMapping(200, implicitly[RootJsonFormat[QueryKeys.OK]])
      ),
      inQuery = Map.empty,
      inPath = Map.empty,
      inHeader = Map.empty
    )

  /**
    * <h1>claimKeys</h1>
    *
    * Claims one-time keys for use in pre-key messages.
    */
  def claimKeys(
      body: ClaimKeys.Body
  ): ApiRequest[AccessTokenAuthentication, ClaimKeys.Body, ClaimKeys.OK] =
    ApiRequest(
      endpoint = "/_matrix/client/v3/keys/claim",
      httpMethod = HttpMethods.POST,
      body = body,
      bodyFormat = implicitly[RootJsonFormat[ClaimKeys.Body]],
      responseMappings = Seq(
        SingleResponseMapping(200, implicitly[RootJsonFormat[ClaimKeys.OK]])
      ),
      inQuery = Map.empty,
      inPath = Map.empty,
      inHeader = Map.empty
    )

  /**
    * <h1>getKeysChanges</h1>
    *
    * Gets a list of users who have updated their device identity keys since a
    * previous sync token.
    *
    * The server should include in the results any users who:
    *
    * currently share a room with the calling user (ie, both users have
    *  membership state `join`); *and*
    * added new device identity keys or removed an existing device with
    *  identity keys, between `from` and `to`.
    *
    * @param from The desired start point of the list. Should be the `next_batch` field
    * from a response to an earlier call to [`/sync`](/client-server-api/#get_matrixclientv3sync). Users who have not
    * uploaded new device identity keys since this point, nor deleted
    * existing devices with identity keys since then, will be excluded
    * from the results.
    *
    * @param to The desired end point of the list. Should be the `next_batch`
    * field from a recent call to [`/sync`](/client-server-api/#get_matrixclientv3sync) - typically the most recent
    * such call. This may be used by the server as a hint to check its
    * caches are up to date.
    */
  def getKeysChanges(
      from: String,
      to: String
  ): ApiRequest[AccessTokenAuthentication, JsObject, GetKeysChanges.OK] =
    ApiRequest(
      endpoint = "/_matrix/client/v3/keys/changes",
      httpMethod = HttpMethods.GET,
      body = JsObject(),
      bodyFormat = implicitly[RootJsonFormat[JsObject]],
      responseMappings = Seq(
        SingleResponseMapping(200, implicitly[RootJsonFormat[GetKeysChanges.OK]])
      ),
      inQuery = buildQuery(
        fromQueryEntry[String]("from" -> from),
        fromQueryEntry[String]("to"   -> to)
      ),
      inPath = Map.empty,
      inHeader = Map.empty
    )

}
