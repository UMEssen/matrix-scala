/**
  * <h1>matrix-scala</h1>
  * @version 1.0.0
  * @author kirill.sokol@uk-essen.de
  *
  * This file was generated.
  *
  * DO NOT EDIT THIS FILE. Any changes to this file will be overwritten
  * the next time the code is generated. If you need to modify the code
  * generated by this tool, make your changes to the generator script
  * and regenerate the code.
  */

package de.ship.matrixscala.api.clientserver

import de.ship.matrixscala.model.Definitions
import de.ship.matrixscala.model.clientserver.UsersData._
import de.ship.matrixscala.json.clientserver.UsersJsonFormats._
import de.ship.matrixscala.json.DefinitionFormats._
import de.ship.matrixscala.core._
import de.ship.matrixscala.core.ResponseMappings._
import de.ship.matrixscala.core.QueryBuilding._
import de.ship.matrixscala.core.HeaderBuilding._
import akka.http.scaladsl.model.HttpMethods
import spray.json.{JsObject, JsValue, RootJsonFormat}
import spray.json.DefaultJsonProtocol._

/**
  * @see "defined in ./build/matrix-spec/data/api/client-server/users.yaml"
  */
object UsersApi {

  /**
    * <h1>searchUserDirectory</h1>
    *
    * Performs a search for users. The homeserver may
    * determine which subset of users are searched, however the homeserver
    * MUST at a minimum consider the users the requesting user shares a
    * room with and those who reside in public rooms (known to the homeserver).
    * The search MUST consider local users to the homeserver, and SHOULD
    * query remote users as part of the search.
    *
    * The search is performed case-insensitively on user IDs and display
    * names preferably using a collation determined based upon the
    * `Accept-Language` header provided in the request, if present.
    */
  def searchUserDirectory(
      body: SearchUserDirectory.Body
  ): ApiRequest[AccessTokenAuthentication, SearchUserDirectory.Body, SearchUserDirectory.OK] =
    ApiRequest(
      endpoint = "/_matrix/client/v3/user_directory/search",
      httpMethod = HttpMethods.POST,
      body = body,
      bodyFormat = implicitly[RootJsonFormat[SearchUserDirectory.Body]],
      responseMappings = Seq(
        SingleResponseMapping(200, implicitly[RootJsonFormat[SearchUserDirectory.OK]])
      ),
      inQuery = Map.empty,
      inPath = Map.empty,
      inHeader = Map.empty
    )

}
