/**
  * <h1>matrix-scala</h1>
  * @version 1.0.0
  * @author kirill.sokol@uk-essen.de
  *
  * This file was generated.
  *
  * DO NOT EDIT THIS FILE. Any changes to this file will be overwritten
  * the next time the code is generated. If you need to modify the code
  * generated by this tool, make your changes to the generator script
  * and regenerate the code.
  */

package de.ship.matrixscala.api.clientserver

import de.ship.matrixscala.model.Definitions
import de.ship.matrixscala.model.clientserver.FilterData._
import de.ship.matrixscala.json.clientserver.FilterJsonFormats._
import de.ship.matrixscala.json.DefinitionFormats._
import de.ship.matrixscala.core._
import de.ship.matrixscala.core.ResponseMappings._
import de.ship.matrixscala.core.QueryBuilding._
import de.ship.matrixscala.core.HeaderBuilding._
import akka.http.scaladsl.model.HttpMethods
import spray.json.{JsObject, JsValue, RootJsonFormat}
import spray.json.DefaultJsonProtocol._

/**
  * @see "defined in ./build/matrix-spec/data/api/client-server/filter.yaml"
  */
object FilterApi {

  /**
    * <h1>defineFilter</h1>
    *
    * Uploads a new filter definition to the homeserver.
    * Returns a filter ID that may be used in future requests to
    * restrict which events are returned to the client.
    *
    * @param userId The id of the user uploading the filter. The access token must be authorized to make requests for this user id.
    */
  def defineFilter(
      body: Definitions.Filter,
      userId: String
  ): ApiRequest[AccessTokenAuthentication, Definitions.Filter, DefineFilter.OK] =
    ApiRequest(
      endpoint = "/_matrix/client/v3/user/{userId}/filter",
      httpMethod = HttpMethods.POST,
      body = body,
      bodyFormat = implicitly[RootJsonFormat[Definitions.Filter]],
      responseMappings = Seq(
        SingleResponseMapping(200, implicitly[RootJsonFormat[DefineFilter.OK]])
      ),
      inQuery = Map.empty,
      inPath = Map(
        "userId" -> userId
      ),
      inHeader = Map.empty
    )

  /**
    * <h1>getFilter</h1>
    *
    * @param userId The user ID to download a filter for.
    *
    * @param filterId The filter ID to download.
    */
  def getFilter(
      userId: String,
      filterId: String
  ): ApiRequest[AccessTokenAuthentication, JsObject, Definitions.Filter] =
    ApiRequest(
      endpoint = "/_matrix/client/v3/user/{userId}/filter/{filterId}",
      httpMethod = HttpMethods.GET,
      body = JsObject(),
      bodyFormat = implicitly[RootJsonFormat[JsObject]],
      responseMappings = Seq(
        SingleResponseMapping(200, implicitly[RootJsonFormat[Definitions.Filter]])
      ),
      inQuery = Map.empty,
      inPath = Map(
        "userId"   -> userId,
        "filterId" -> filterId
      ),
      inHeader = Map.empty
    )

}
