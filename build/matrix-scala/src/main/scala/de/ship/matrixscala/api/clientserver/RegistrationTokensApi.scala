/**
  * <h1>matrix-scala</h1>
  * @version 1.0.0
  * @author kirill.sokol@uk-essen.de
  *
  * This file was generated.
  *
  * DO NOT EDIT THIS FILE. Any changes to this file will be overwritten
  * the next time the code is generated. If you need to modify the code
  * generated by this tool, make your changes to the generator script
  * and regenerate the code.
  */

package de.ship.matrixscala.api.clientserver

import de.ship.matrixscala.model.Definitions
import de.ship.matrixscala.model.clientserver.RegistrationTokensData._
import de.ship.matrixscala.json.clientserver.RegistrationTokensJsonFormats._
import de.ship.matrixscala.json.DefinitionFormats._
import de.ship.matrixscala.core._
import de.ship.matrixscala.core.ResponseMappings._
import de.ship.matrixscala.core.QueryBuilding._
import de.ship.matrixscala.core.HeaderBuilding._
import akka.http.scaladsl.model.HttpMethods
import spray.json.{JsObject, JsValue, RootJsonFormat}
import spray.json.DefaultJsonProtocol._

/**
  * @see "defined in ./build/matrix-spec/data/api/client-server/registration_tokens.yaml"
  */
object RegistrationTokensApi {

  /**
    * <h1>registrationTokenValidity</h1>
    *
    * Queries the server to determine if a given registration token is still
    * valid at the time of request. This is a point-in-time check where the
    * token might still expire by the time it is used.
    *
    * Servers should be sure to rate limit this endpoint to avoid brute force
    * attacks.
    *
    * @param token The token to check validity of.
    */
  def registrationTokenValidity(
      token: String
  ): ApiRequest[NoAuthentication, JsObject, RegistrationTokenValidity.OK] =
    ApiRequest(
      endpoint = "/_matrix/client/v1/register/m.login.registration_token/validity",
      httpMethod = HttpMethods.GET,
      body = JsObject(),
      bodyFormat = implicitly[RootJsonFormat[JsObject]],
      responseMappings = Seq(
        SingleResponseMapping(200, implicitly[RootJsonFormat[RegistrationTokenValidity.OK]])
      ),
      inQuery = buildQuery(
        fromQueryEntry[String]("token" -> token)
      ),
      inPath = Map.empty,
      inHeader = Map.empty
    )

}
