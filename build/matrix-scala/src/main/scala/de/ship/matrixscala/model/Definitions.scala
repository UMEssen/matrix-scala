/**
  * <h1>matrix-scala</h1>
  * @version 1.0.0
  * @author kirill.sokol@uk-essen.de
  *
  * This file was generated.
  *
  * DO NOT EDIT THIS FILE. Any changes to this file will be overwritten
  * the next time the code is generated. If you need to modify the code
  * generated by this tool, make your changes to the generator script
  * and regenerate the code.
  */

package de.ship.matrixscala.model

import de.ship.matrixscala.core._

import spray.json.{JsObject, JsValue}

object Definitions {

  /**
    * <h1>KeyBackupData</h1>
    *
    *  The key data
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/key_backup_data.yaml"
    */
  case class KeyBackupData(
      first_message_index: Int,
      forwarded_count: Int,
      is_verified: Boolean,
      session_data: JsObject
  )

  /**
    * <h1>RoomKeyBackup</h1>
    *
    *  The backed up keys for a room.
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/room_key_backup.yaml"
    */
  case class RoomKeyBackup(
      sessions: Map[String, Definitions.KeyBackupData]
  )

  /**
    * <h1>PushCondition</h1>
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/push_condition.yaml"
    */
  case class PushCondition(
      kind: String,
      key: Option[String] = None,
      pattern: Option[String] = None,
      is: Option[String] = None
  )

  /**
    * <h1>PushRule</h1>
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/push_rule.yaml"
    */
  case class PushRule(
      actions: Seq[Union2[JsObject, String]],
      default: Boolean,
      enabled: Boolean,
      rule_id: String,
      conditions: Option[Seq[Definitions.PushCondition]] = None,
      pattern: Option[String] = None
  )

  /**
    * <h1>PushRuleset</h1>
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/push_ruleset.yaml"
    */
  case class PushRuleset(
      content: Option[Seq[Definitions.PushRule]] = None,
      `override`: Option[Seq[Definitions.PushRule]] = None,
      room: Option[Seq[Definitions.PushRule]] = None,
      sender: Option[Seq[Definitions.PushRule]] = None,
      underride: Option[Seq[Definitions.PushRule]] = None
  )

  /**
    * <h1>EventFilter</h1>
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/event_filter.yaml"
    */
  case class EventFilter(
      limit: Option[Int] = None,
      not_senders: Option[Seq[String]] = None,
      not_types: Option[Seq[String]] = None,
      senders: Option[Seq[String]] = None,
      types: Option[Seq[String]] = None
  )

  object RoomEventFilter {

    /**
      * <h1>RoomEventFilter</h1>
      *
      * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/room_event_filter.yaml"
      */
    case class RoomEventFilter(
        unread_thread_notifications: Option[Boolean] = None,
        lazy_load_members: Option[Boolean] = None,
        include_redundant_members: Option[Boolean] = None,
        not_rooms: Option[Seq[String]] = None,
        rooms: Option[Seq[String]] = None,
        contains_url: Option[Boolean] = None
    )

  }

  /**
    * <h1>RoomEventFilter</h1>
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/room_event_filter.yaml"
    */
  case class RoomEventFilter(
      //composite start Definitions.EventFilter
      limit: Option[Int] = None,
      not_senders: Option[Seq[String]] = None,
      not_types: Option[Seq[String]] = None,
      senders: Option[Seq[String]] = None,
      types: Option[Seq[String]] = None,
      // composite end

      //composite start Definitions.RoomEventFilter.RoomEventFilter
      unread_thread_notifications: Option[Boolean] = None,
      lazy_load_members: Option[Boolean] = None,
      include_redundant_members: Option[Boolean] = None,
      not_rooms: Option[Seq[String]] = None,
      rooms: Option[Seq[String]] = None,
      contains_url: Option[Boolean] = None

      // composite end
  )

  object Filter {

    object EventFormatEnum extends Enumeration {

      val `client`: Value = Value("client")

      val `federation`: Value = Value("federation")

    }

    /**
      * <h1>RoomFilter</h1>
      *
      *  Filters to be applied to room data.
      *
      * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/sync_filter.yaml"
      */
    case class RoomFilter(
        not_rooms: Option[Seq[String]] = None,
        rooms: Option[Seq[String]] = None,
        ephemeral: Option[Definitions.RoomEventFilter] = None,
        include_leave: Option[Boolean] = None,
        state: Option[Definitions.RoomEventFilter] = None,
        timeline: Option[Definitions.RoomEventFilter] = None,
        account_data: Option[Definitions.RoomEventFilter] = None
    )

  }

  /**
    * <h1>Filter</h1>
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/sync_filter.yaml"
    */
  case class Filter(
      event_fields: Option[Seq[String]] = None,
      event_format: Option[Definitions.Filter.EventFormatEnum.Value] = None,
      presence: Option[Definitions.EventFilter] = None,
      account_data: Option[Definitions.EventFilter] = None,
      room: Option[Definitions.Filter.RoomFilter] = None
  )

  object ClientEventWithoutRoomID {

    /**
      * <h1>UnsignedData</h1>
      *
      *  Contains optional extra information about the event.
      *
      * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/client_event_without_room_id.yaml"
      */
    case class UnsignedData(
        age: Option[Long] = None,
        redacted_because: Option[JsObject] = None,
        transaction_id: Option[String] = None,
        prev_content: Option[JsObject] = None
    )

  }

  /**
    * <h1>ClientEventWithoutRoomID</h1>
    *
    *  The format used for events when they are returned from
    * API endpoints such as `/sync`, where the `room_id` is implied elsewhere
    * in the response.
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/client_event_without_room_id.yaml"
    */
  case class ClientEventWithoutRoomID(
      event_id: String,
      `type`: String,
      state_key: Option[String] = None,
      sender: String,
      origin_server_ts: Long,
      content: JsObject,
      unsigned: Option[Definitions.ClientEventWithoutRoomID.UnsignedData] = None
  )

  /**
    * <h1>ThirdPartySigned</h1>
    *
    *  A signature of an `m.third_party_invite` token to prove that this user
    * owns a third-party identity which has been invited to the room.
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/third_party_signed.yaml"
    */
  case class ThirdPartySigned(
      sender: String,
      mxid: String,
      token: String,
      signatures: Map[String, Map[String, String]]
  )

  /**
    * <h1>AuthenticationData</h1>
    *
    *  Used by clients to submit authentication information to the interactive-authentication API
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/auth_data.yaml"
    */
  case class AuthenticationData(
      `type`: Option[String] = None,
      session: Option[String] = None
  ) extends AdditionalFields[Definitions.AuthenticationData, JsObject]

  /**
    * <h1>RequestTokenResponse</h1>
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/request_token_response.yaml"
    */
  case class RequestTokenResponse(
      sid: String,
      submit_url: Option[String] = None
  )

  /**
    * <h1>StateEventBatch</h1>
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/state_event_batch.yaml"
    */
  case class StateEventBatch(
      events: Option[Seq[Definitions.ClientEventWithoutRoomID]] = None
  )

  /**
    * <h1>TimelineBatch</h1>
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/timeline_batch.yaml"
    */
  case class TimelineBatch(
      limited: Option[Boolean] = None,
      prev_batch: Option[String] = None,
      events: Seq[Definitions.ClientEventWithoutRoomID]
  )

  /**
    * <h1>Event</h1>
    *
    *  The basic set of fields all events must have.
    *
    * @see "defined in ./build/matrix-spec/data/event-schemas/schema/core-event-schema/event.yaml"
    */
  case class Event(
      content: JsObject,
      `type`: String
  )

  /**
    * <h1>EventBatch</h1>
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/event_batch.yaml"
    */
  case class EventBatch(
      events: Option[Seq[Definitions.Event]] = None
  )

  /**
    * <h1>StrippedStateEvent</h1>
    *
    *  A stripped down state event, with only the `type`, `state_key`,
    * `sender`, and `content` keys.
    *
    * @see "defined in ./build/matrix-spec/data/event-schemas/schema/core-event-schema/stripped_state.yaml"
    */
  case class StrippedStateEvent(
      content: JsObject,
      state_key: String,
      `type`: String,
      sender: String
  )

  /**
    * <h1>HomeserverInformation</h1>
    *
    *  Used by clients to discover homeserver information.
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/wellknown/homeserver.yaml"
    */
  case class HomeserverInformation(
      base_url: String
  )

  /**
    * <h1>IdentityServerInformation</h1>
    *
    *  Used by clients to discover identity server information.
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/wellknown/identity_server.yaml"
    */
  case class IdentityServerInformation(
      base_url: String
  )

  /**
    * <h1>DiscoveryInformation</h1>
    *
    *  Used by clients to determine the homeserver, identity server, and other
    * optional components they should be interacting with.
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/wellknown/full.yaml"
    */
  case class DiscoveryInformation(
      `m.homeserver`: Definitions.HomeserverInformation,
      `m.identity_server`: Option[Definitions.IdentityServerInformation] = None
  ) extends AdditionalFields[Definitions.DiscoveryInformation, JsObject]

  /**
    * <h1>PublicRoomsChunk</h1>
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/public_rooms_chunk.yaml"
    */
  case class PublicRoomsChunk(
      canonical_alias: Option[String] = None,
      name: Option[String] = None,
      num_joined_members: Int,
      room_id: String,
      topic: Option[String] = None,
      world_readable: Boolean,
      guest_can_join: Boolean,
      avatar_url: Option[String] = None,
      join_rule: Option[String] = None,
      room_type: Option[String] = None
  )

  object Protocol {

    /**
      * <h1>FieldType</h1>
      *
      *  Definition of valid values for a field.
      *
      * @see "defined in ./build/matrix-spec/data/api/application-service/definitions/protocol.yaml"
      */
    case class FieldType(
        regexp: String,
        placeholder: String
    )

    /**
      * <h1>ProtocolInstance</h1>
      *
      * @see "defined in ./build/matrix-spec/data/api/application-service/definitions/protocol.yaml"
      */
    case class ProtocolInstance(
        desc: String,
        icon: Option[String] = None,
        fields: JsObject,
        network_id: String
    )

  }

  /**
    * <h1>Protocol</h1>
    *
    * @see "defined in ./build/matrix-spec/data/api/application-service/definitions/protocol.yaml"
    */
  case class Protocol(
      user_fields: Seq[String],
      location_fields: Seq[String],
      icon: String,
      field_types: Map[String, Definitions.Protocol.FieldType],
      instances: Seq[Definitions.Protocol.ProtocolInstance]
  )

  /**
    * <h1>Location</h1>
    *
    * @see "defined in ./build/matrix-spec/data/api/application-service/definitions/location.yaml"
    */
  case class Location(
      alias: String,
      protocol: String,
      fields: JsObject
  )

  /**
    * <h1>User</h1>
    *
    * @see "defined in ./build/matrix-spec/data/api/application-service/definitions/user.yaml"
    */
  case class User(
      userid: String,
      protocol: String,
      fields: JsObject
  )

  object ClientEvent {

    object Composite {

      /**
        * <h1>Unsigned</h1>
        *
        * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/client_event.yaml"
        */
      case class Unsigned(
          redacted_because: Option[JsObject] = None
      )

    }

    /**
      * <h1>Composite</h1>
      *
      * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/client_event.yaml"
      */
    case class Composite(
        room_id: String,
        unsigned: Option[Definitions.ClientEvent.Composite.Unsigned] = None
    )

  }

  /**
    * <h1>ClientEvent</h1>
    *
    *  The format used for events when they are returned from a homeserver to a client
    * via the Client-Server API, or sent to an Application Service via the Application Services API.
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/client_event.yaml"
    */
  case class ClientEvent(
      //composite start Definitions.ClientEventWithoutRoomID
      event_id: String,
      `type`: String,
      state_key: Option[String] = None,
      sender: String,
      origin_server_ts: Long,
      content: JsObject,
      unsigned: Option[Definitions.ClientEventWithoutRoomID.UnsignedData] = None,
      // composite end

      //composite start Definitions.ClientEvent.Composite
      room_id: String

      // composite end
  )

  /**
    * <h1>Device</h1>
    *
    *  A client device
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/client_device.yaml"
    */
  case class Device(
      device_id: String,
      display_name: Option[String] = None,
      last_seen_ip: Option[String] = None,
      last_seen_ts: Option[Long] = None
  )

  /**
    * <h1>OpenIdCredentials</h1>
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/openid_token.yaml"
    */
  case class OpenIdCredentials(
      access_token: String,
      token_type: String,
      matrix_server_name: String,
      expires_in: Int
  )

  /**
    * <h1>UserIdentifier</h1>
    *
    *  Identification information for a user
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/user_identifier.yaml"
    */
  case class UserIdentifier(
      `type`: String
  ) extends AdditionalFields[Definitions.UserIdentifier, JsValue]

  /**
    * <h1>DeviceKeys</h1>
    *
    *  Device identity keys
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/device_keys.yaml"
    */
  case class DeviceKeys(
      user_id: String,
      device_id: String,
      algorithms: Seq[String],
      keys: Map[String, String],
      signatures: Map[String, Map[String, String]]
  )

  object CrossSigningKey {

    object UsageEnum extends Enumeration {

      val `master`: Value = Value("master")

      val `self_signing`: Value = Value("self_signing")

      val `user_signing`: Value = Value("user_signing")

    }

  }

  /**
    * <h1>CrossSigningKey</h1>
    *
    *  Cross signing key
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/cross_signing_key.yaml"
    */
  case class CrossSigningKey(
      user_id: String,
      usage: Seq[Definitions.CrossSigningKey.UsageEnum.Value],
      keys: Map[String, String],
      signatures: Option[JsObject] = None
  )

  object PublicRoomsResponse {

    object Chunk {

      /**
        * <h1>PublicRoomsChunk</h1>
        *
        * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/public_rooms_response.yaml"
        */
      case class PublicRoomsChunk(
          join_rule: Option[String] = None
      )

    }

    /**
      * <h1>Chunk</h1>
      *
      * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/public_rooms_response.yaml"
      */
    case class Chunk(
        //composite start Definitions.PublicRoomsChunk
        canonical_alias: Option[String] = None,
        name: Option[String] = None,
        num_joined_members: Int,
        room_id: String,
        topic: Option[String] = None,
        world_readable: Boolean,
        guest_can_join: Boolean,
        avatar_url: Option[String] = None,
        join_rule: Option[String] = None,
        room_type: Option[String] = None

        // composite end

        //composite start Definitions.PublicRoomsResponse.Chunk.PublicRoomsChunk

        // composite end
    )

  }

  /**
    * <h1>PublicRoomsResponse</h1>
    *
    *  A list of the rooms on the server.
    *
    * @see "defined in ./build/matrix-spec/data/api/client-server/definitions/public_rooms_response.yaml"
    */
  case class PublicRoomsResponse(
      chunk: Seq[Definitions.PublicRoomsResponse.Chunk],
      next_batch: Option[String] = None,
      prev_batch: Option[String] = None,
      total_room_count_estimate: Option[Int] = None
  )

  /**
    * <h1>Sid</h1>
    *
    * @see "defined in ./build/matrix-spec/data/api/identity/definitions/sid.yaml"
    */
  case class Sid(
      sid: String
  )

  /**
    * <h1>ModerationPolicyRule</h1>
    *
    * @see "defined in ./build/matrix-spec/data/event-schemas/moderation_policy_rule.yaml"
    */
  case class ModerationPolicyRule(
      entity: String,
      recommendation: String,
      reason: String
  )

  /**
    * <h1>UnsignedData</h1>
    *
    *  Contains optional extra information about the event.
    *
    * @see "defined in ./build/matrix-spec/data/event-schemas/schema/core-event-schema/unsigned_prop.yaml"
    */
  case class UnsignedData(
      age: Option[Int] = None
  )

  /**
    * <h1>SyncRoomEvent</h1>
    *
    *  In addition to the Event fields, Room Events have the following additional fields.
    *
    * @see "defined in ./build/matrix-spec/data/event-schemas/schema/core-event-schema/sync_room_event.yaml"
    */
  case class SyncRoomEvent(
      //composite start Definitions.Event
      content: JsObject,
      `type`: String,
      // composite end
      event_id: String,
      sender: String,
      origin_server_ts: Long,
      unsigned: Option[Definitions.UnsignedData] = None
  )

  /**
    * <h1>RoomEvent</h1>
    *
    *  Room Events have the following fields.
    *
    * @see "defined in ./build/matrix-spec/data/event-schemas/schema/core-event-schema/room_event.yaml"
    */
  case class RoomEvent(
      //composite start Definitions.SyncRoomEvent
      event_id: String,
      sender: String,
      origin_server_ts: Long,
      unsigned: Option[Definitions.UnsignedData] = None,
      // composite end
      room_id: String
  )

  /**
    * <h1>SyncStateEvent</h1>
    *
    *  In addition to the Room Event fields, State Events have the following additional fields.
    *
    * @see "defined in ./build/matrix-spec/data/event-schemas/schema/core-event-schema/sync_state_event.yaml"
    */
  case class SyncStateEvent(
      //composite start Definitions.SyncRoomEvent
      event_id: String,
      sender: String,
      origin_server_ts: Long,
      unsigned: Option[Definitions.UnsignedData] = None,
      // composite end
      state_key: String
  )

  /**
    * <h1>StateEvent</h1>
    *
    *  State Events have the following fields.
    *
    * @see "defined in ./build/matrix-spec/data/event-schemas/schema/core-event-schema/state_event.yaml"
    */
  case class StateEvent(
      //composite start Definitions.RoomEvent
      room_id: String,
      // composite end

      //composite start Definitions.SyncStateEvent
      state_key: String

      // composite end
  )

  /**
    * <h1>ThumbnailInfo</h1>
    *
    *  Metadata about a thumbnail image.
    *
    * @see "defined in ./build/matrix-spec/data/event-schemas/schema/core-event-schema/msgtype_infos/thumbnail_info.yaml"
    */
  case class ThumbnailInfo(
      h: Option[Int] = None,
      w: Option[Int] = None,
      mimetype: Option[String] = None,
      size: Option[Int] = None
  )

  object VerificationRelatesTo {

    object RelTypeEnum extends Enumeration {

      val `m.reference`: Value = Value("m.reference")

    }

  }

  /**
    * <h1>VerificationRelatesTo</h1>
    *
    *  Required when sent as an in-room message. Indicates the
    * `m.key.verification.request` that this message is related to. Note that for
    * encrypted messages, this property should be in the unencrypted portion of the
    * event.
    *
    * @see "defined in ./build/matrix-spec/data/event-schemas/schema/m.key.verification.m.relates_to.yaml"
    */
  case class VerificationRelatesTo(
      rel_type: Option[Definitions.VerificationRelatesTo.RelTypeEnum.Value] = None,
      event_id: Option[String] = None
  )

  /**
    * <h1>ImageInfo</h1>
    *
    *  Metadata about an image.
    *
    * @see "defined in ./build/matrix-spec/data/event-schemas/schema/core-event-schema/msgtype_infos/image_info.yaml"
    */
  case class ImageInfo(
      h: Option[Int] = None,
      w: Option[Int] = None,
      mimetype: Option[String] = None,
      size: Option[Int] = None,
      thumbnail_url: Option[String] = None,
      thumbnail_file: Option[JsObject] = None,
      thumbnail_info: Option[Definitions.ThumbnailInfo] = None
  )

}
