/**
  * <h1>matrix-scala</h1>
  * @version 1.0.0
  * @author kirill.sokol@uk-essen.de
  *
  * This file was generated.
  *
  * DO NOT EDIT THIS FILE. Any changes to this file will be overwritten
  * the next time the code is generated. If you need to modify the code
  * generated by this tool, make your changes to the generator script
  * and regenerate the code.
  */

package de.ship.matrixscala.api.clientserver

import de.ship.matrixscala.model.Definitions
import de.ship.matrixscala.model.clientserver.OldSyncData._
import de.ship.matrixscala.json.clientserver.OldSyncJsonFormats._
import de.ship.matrixscala.json.DefinitionFormats._
import de.ship.matrixscala.core._
import de.ship.matrixscala.core.ResponseMappings._
import de.ship.matrixscala.core.QueryBuilding._
import de.ship.matrixscala.core.HeaderBuilding._
import akka.http.scaladsl.model.HttpMethods
import spray.json.{JsObject, JsValue, RootJsonFormat}
import spray.json.DefaultJsonProtocol._

/**
  * @see "defined in ./build/matrix-spec/data/api/client-server/old_sync.yaml"
  */
object OldSyncApi {

  /**
    * <h1>getEvents</h1>
    *
    * @deprecated
    *
    * This will listen for new events and return them to the caller. This will
    * block until an event is received, or until the `timeout` is reached.
    *
    * This endpoint was deprecated in r0 of this specification. Clients
    * should instead call the [`/sync`](/client-server-api/#get_matrixclientv3sync)
    * endpoint with a `since` parameter. See
    * the [migration guide](https://matrix.org/docs/guides/migrating-from-client-server-api-v-1#deprecated-endpoints).
    *
    * @param from The token to stream from. This token is either from a previous
    * request to this API or from the initial sync API.
    *
    * @param timeout The maximum time in milliseconds to wait for an event.
    */
  def getEvents(
      from: Option[String] = None,
      timeout: Option[Int] = None
  ): ApiRequest[AccessTokenAuthentication, JsObject, GetEvents.OK] =
    ApiRequest(
      endpoint = "/_matrix/client/v3/events",
      httpMethod = HttpMethods.GET,
      body = JsObject(),
      bodyFormat = implicitly[RootJsonFormat[JsObject]],
      responseMappings = Seq(
        SingleResponseMapping(200, implicitly[RootJsonFormat[GetEvents.OK]])
      ),
      inQuery = buildQuery(
        fromQueryEntry[Option[String]]("from" -> from),
        fromQueryEntry[Option[Int]]("timeout" -> timeout)
      ),
      inPath = Map.empty,
      inHeader = Map.empty
    )

  /**
    * <h1>initialSync</h1>
    *
    * @deprecated
    *
    * This returns the full state for this user, with an optional limit on the
    * number of messages per room to return.
    *
    * This endpoint was deprecated in r0 of this specification. Clients
    * should instead call the [`/sync`](/client-server-api/#get_matrixclientv3sync)
    * endpoint with no `since` parameter. See
    * the [migration guide](https://matrix.org/docs/guides/migrating-from-client-server-api-v-1#deprecated-endpoints).
    *
    * @param limit The maximum number of messages to return for each room.
    *
    * @param archived Whether to include rooms that the user has left. If `false` then
    * only rooms that the user has been invited to or has joined are
    * included. If set to `true` then rooms that the user has left are
    * included as well. By default this is `false`.
    */
  def initialSync(
      limit: Option[Int] = None,
      archived: Option[Boolean] = None
  ): ApiRequest[AccessTokenAuthentication, JsObject, InitialSync.OK] =
    ApiRequest(
      endpoint = "/_matrix/client/v3/initialSync",
      httpMethod = HttpMethods.GET,
      body = JsObject(),
      bodyFormat = implicitly[RootJsonFormat[JsObject]],
      responseMappings = Seq(
        SingleResponseMapping(200, implicitly[RootJsonFormat[InitialSync.OK]])
      ),
      inQuery = buildQuery(
        fromQueryEntry[Option[Int]]("limit"        -> limit),
        fromQueryEntry[Option[Boolean]]("archived" -> archived)
      ),
      inPath = Map.empty,
      inHeader = Map.empty
    )

  /**
    * <h1>getOneEvent</h1>
    *
    * @deprecated
    *
    * Get a single event based on `event_id`. You must have permission to
    * retrieve this event e.g. by being a member in the room for this event.
    *
    * This endpoint was deprecated in r0 of this specification. Clients
    * should instead call the
    * [/rooms/{roomId}/event/{eventId}](/client-server-api/#get_matrixclientv3roomsroomideventeventid) API
    * or the [/rooms/{roomId}/context/{eventId](/client-server-api/#get_matrixclientv3roomsroomidcontexteventid) API.
    *
    * @param eventId The event ID to get.
    */
  def getOneEvent(
      eventId: String
  ): ApiRequest[AccessTokenAuthentication, JsObject, Definitions.ClientEvent] =
    ApiRequest(
      endpoint = "/_matrix/client/v3/events/{eventId}",
      httpMethod = HttpMethods.GET,
      body = JsObject(),
      bodyFormat = implicitly[RootJsonFormat[JsObject]],
      responseMappings = Seq(
        SingleResponseMapping(200, implicitly[RootJsonFormat[Definitions.ClientEvent]])
      ),
      inQuery = Map.empty,
      inPath = Map(
        "eventId" -> eventId
      ),
      inHeader = Map.empty
    )

}
