/**
  * <h1>matrix-scala</h1>
  * @version 1.0.0
  * @author kirill.sokol@uk-essen.de
  *
  * This file was generated.
  *
  * DO NOT EDIT THIS FILE. Any changes to this file will be overwritten
  * the next time the code is generated. If you need to modify the code
  * generated by this tool, make your changes to the generator script
  * and regenerate the code.
  */

package de.ship.matrixscala.api.clientserver

import de.ship.matrixscala.model.Definitions
import de.ship.matrixscala.model.clientserver.InvitingData._
import de.ship.matrixscala.json.clientserver.InvitingJsonFormats._
import de.ship.matrixscala.json.DefinitionFormats._
import de.ship.matrixscala.core._
import de.ship.matrixscala.core.ResponseMappings._
import de.ship.matrixscala.core.QueryBuilding._
import de.ship.matrixscala.core.HeaderBuilding._
import akka.http.scaladsl.model.HttpMethods
import spray.json.{JsObject, JsValue, RootJsonFormat}
import spray.json.DefaultJsonProtocol._

/**
  * @see "defined in ./build/matrix-spec/data/api/client-server/inviting.yaml"
  */
object InvitingApi {

  /**
    * <h1>inviteUser</h1>
    *
    * Note that there are two forms of this API, which are documented separately.
    * This version of the API requires that the inviter knows the Matrix
    * identifier of the invitee. The other is documented in the
    * [third-party invites](/client-server-api/#third-party-invites) section.*
    *
    * This API invites a user to participate in a particular room.
    * They do not start participating in the room until they actually join the
    * room.
    *
    * Only users currently in a particular room can invite other users to
    * join that room.
    *
    * If the user was invited to the room, the homeserver will append a
    * `m.room.member` event to the room.
    *
    * @param roomId The room identifier (not alias) to which to invite the user.
    */
  def inviteUser(
      body: InviteUser.Body,
      roomId: String
  ): ApiRequest[AccessTokenAuthentication, InviteUser.Body, JsObject] =
    ApiRequest(
      endpoint = "/_matrix/client/v3/rooms/{roomId}/invite ",
      httpMethod = HttpMethods.POST,
      body = body,
      bodyFormat = implicitly[RootJsonFormat[InviteUser.Body]],
      responseMappings = Seq(
        SingleResponseMapping(200, implicitly[RootJsonFormat[JsObject]])
      ),
      inQuery = Map.empty,
      inPath = Map(
        "roomId" -> roomId
      ),
      inHeader = Map.empty
    )

}
