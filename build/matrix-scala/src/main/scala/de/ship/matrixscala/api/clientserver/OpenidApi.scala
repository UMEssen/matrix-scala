/**
  * <h1>matrix-scala</h1>
  * @version 1.0.0
  * @author kirill.sokol@uk-essen.de
  *
  * This file was generated.
  *
  * DO NOT EDIT THIS FILE. Any changes to this file will be overwritten
  * the next time the code is generated. If you need to modify the code
  * generated by this tool, make your changes to the generator script
  * and regenerate the code.
  */

package de.ship.matrixscala.api.clientserver

import de.ship.matrixscala.model.Definitions
import de.ship.matrixscala.model.clientserver.OpenidData._
import de.ship.matrixscala.json.clientserver.OpenidJsonFormats._
import de.ship.matrixscala.json.DefinitionFormats._
import de.ship.matrixscala.core._
import de.ship.matrixscala.core.ResponseMappings._
import de.ship.matrixscala.core.QueryBuilding._
import de.ship.matrixscala.core.HeaderBuilding._
import akka.http.scaladsl.model.HttpMethods
import spray.json.{JsObject, JsValue, RootJsonFormat}
import spray.json.DefaultJsonProtocol._

/**
  * @see "defined in ./build/matrix-spec/data/api/client-server/openid.yaml"
  */
object OpenidApi {

  /**
    * <h1>requestOpenIdToken</h1>
    *
    * Gets an OpenID token object that the requester may supply to another
    * service to verify their identity in Matrix. The generated token is only
    * valid for exchanging for user information from the federation API for
    * OpenID.
    *
    * The access token generated is only valid for the OpenID API. It cannot
    * be used to request another OpenID access token or call `/sync`, for
    * example.
    *
    * @param userId The user to request an OpenID token for. Should be the user who
    * is authenticated for the request.
    */
  def requestOpenIdToken(
      body: JsObject,
      userId: String
  ): ApiRequest[AccessTokenAuthentication, JsObject, Definitions.OpenIdCredentials] =
    ApiRequest(
      endpoint = "/_matrix/client/v3/user/{userId}/openid/request_token",
      httpMethod = HttpMethods.POST,
      body = body,
      bodyFormat = implicitly[RootJsonFormat[JsObject]],
      responseMappings = Seq(
        SingleResponseMapping(200, implicitly[RootJsonFormat[Definitions.OpenIdCredentials]])
      ),
      inQuery = Map.empty,
      inPath = Map(
        "userId" -> userId
      ),
      inHeader = Map.empty
    )

}
