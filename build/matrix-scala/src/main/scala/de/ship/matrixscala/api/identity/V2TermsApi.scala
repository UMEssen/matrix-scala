/**
  * <h1>matrix-scala</h1>
  * @version 1.0.0
  * @author kirill.sokol@uk-essen.de
  *
  * This file was generated.
  *
  * DO NOT EDIT THIS FILE. Any changes to this file will be overwritten
  * the next time the code is generated. If you need to modify the code
  * generated by this tool, make your changes to the generator script
  * and regenerate the code.
  */

package de.ship.matrixscala.api.identity

import de.ship.matrixscala.model.Definitions
import de.ship.matrixscala.model.identity.V2TermsData._
import de.ship.matrixscala.json.identity.V2TermsJsonFormats._
import de.ship.matrixscala.json.DefinitionFormats._
import de.ship.matrixscala.core._
import de.ship.matrixscala.core.ResponseMappings._
import de.ship.matrixscala.core.QueryBuilding._
import de.ship.matrixscala.core.HeaderBuilding._
import akka.http.scaladsl.model.HttpMethods
import spray.json.{JsObject, JsValue, RootJsonFormat}
import spray.json.DefaultJsonProtocol._

/**
  * @see "defined in ./build/matrix-spec/data/api/identity/v2_terms.yaml"
  */
object V2TermsApi {

  /**
    * <h1>getTerms</h1>
    *
    * Gets all the terms of service offered by the server. The client is expected
    * to filter through the terms to determine which terms need acceptance from the
    * user. Note that this endpoint does not require authentication.
    */
  def getTerms(
  ): ApiRequest[NoAuthentication, JsObject, GetTerms.OK] =
    ApiRequest(
      endpoint = "/_matrix/identity/v2/terms",
      httpMethod = HttpMethods.GET,
      body = JsObject(),
      bodyFormat = implicitly[RootJsonFormat[JsObject]],
      responseMappings = Seq(
        SingleResponseMapping(200, implicitly[RootJsonFormat[GetTerms.OK]])
      ),
      inQuery = Map.empty,
      inPath = Map.empty,
      inHeader = Map.empty
    )

  /**
    * <h1>agreeToTerms</h1>
    *
    * Called by a client to indicate that the user has accepted/agreed to the included
    * set of URLs. Servers MUST NOT assume that the client will be sending all previously
    * accepted URLs and should therefore append the provided URLs to what the server
    * already knows has been accepted.
    *
    * Clients MUST provide the URL of the policy in the language that was presented
    * to the user. Servers SHOULD consider acceptance of any one language's URL as
    * acceptance for all other languages of that policy.
    *
    * The server should avoid returning `M_TERMS_NOT_SIGNED` because the client
    * may not be accepting all terms at once.
    */
  def agreeToTerms(
      body: AgreeToTerms.Body
  ): ApiRequest[AccessTokenAuthentication, AgreeToTerms.Body, JsObject] =
    ApiRequest(
      endpoint = "/_matrix/identity/v2/terms",
      httpMethod = HttpMethods.POST,
      body = body,
      bodyFormat = implicitly[RootJsonFormat[AgreeToTerms.Body]],
      responseMappings = Seq(
        SingleResponseMapping(200, implicitly[RootJsonFormat[JsObject]])
      ),
      inQuery = Map.empty,
      inPath = Map.empty,
      inHeader = Map.empty
    )

}
