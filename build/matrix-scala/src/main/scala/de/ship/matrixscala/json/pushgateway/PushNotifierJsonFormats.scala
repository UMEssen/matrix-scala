/**
  * <h1>matrix-scala</h1>
  * @version 1.0.0
  * @author kirill.sokol@uk-essen.de
  *
  * This file was generated.
  *
  * DO NOT EDIT THIS FILE. Any changes to this file will be overwritten
  * the next time the code is generated. If you need to modify the code
  * generated by this tool, make your changes to the generator script
  * and regenerate the code.
  */

package de.ship.matrixscala.json.pushgateway

import de.ship.matrixscala.core._
import de.ship.matrixscala.json.DefinitionFormats._
import de.ship.matrixscala.model.Definitions
import de.ship.matrixscala.model.pushgateway.PushNotifierData._

import de.ship.matrixscala.json.core.CoreJsonFormats._
import spray.json._
import DefaultJsonProtocol._

object PushNotifierJsonFormats {

  implicit val NotifyOKFormat: RootJsonFormat[Notify.OK] = jsonFormat1(Notify.OK.apply)

  implicit val NotifyBodyNotificationPrioEnumFormat
      : RootJsonFormat[Notify.Body.Notification.PrioEnum.Value] = new EnumJsonConverter(
    Notify.Body.Notification.PrioEnum
  )

  implicit val NotifyBodyNotificationCountsFormat: RootJsonFormat[Notify.Body.Notification.Counts] =
    jsonFormat2(Notify.Body.Notification.Counts.apply)

  implicit val NotifyBodyNotificationDeviceFormat: RootJsonFormat[Notify.Body.Notification.Device] =
    jsonFormat5(Notify.Body.Notification.Device.apply)

  implicit val NotifyBodyNotificationFormat: RootJsonFormat[Notify.Body.Notification] =
    jsonFormat12(Notify.Body.Notification.apply)

  implicit val NotifyBodyFormat: RootJsonFormat[Notify.Body] = jsonFormat1(Notify.Body.apply)

}
