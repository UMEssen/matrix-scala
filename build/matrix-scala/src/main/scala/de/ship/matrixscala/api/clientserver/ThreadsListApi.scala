/**
  * <h1>matrix-scala</h1>
  * @version 1.0.0
  * @author kirill.sokol@uk-essen.de
  *
  * This file was generated.
  *
  * DO NOT EDIT THIS FILE. Any changes to this file will be overwritten
  * the next time the code is generated. If you need to modify the code
  * generated by this tool, make your changes to the generator script
  * and regenerate the code.
  */

package de.ship.matrixscala.api.clientserver

import de.ship.matrixscala.model.Definitions
import de.ship.matrixscala.model.clientserver.ThreadsListData._
import de.ship.matrixscala.json.clientserver.ThreadsListJsonFormats._
import de.ship.matrixscala.json.DefinitionFormats._
import de.ship.matrixscala.core._
import de.ship.matrixscala.core.ResponseMappings._
import de.ship.matrixscala.core.QueryBuilding._
import de.ship.matrixscala.core.HeaderBuilding._
import akka.http.scaladsl.model.HttpMethods
import spray.json.{JsObject, JsValue, RootJsonFormat}
import spray.json.DefaultJsonProtocol._

/**
  * @see "defined in ./build/matrix-spec/data/api/client-server/threads_list.yaml"
  */
object ThreadsListApi {

  /**
    * <h1>getThreadRoots</h1>
    *
    * This API is used to paginate through the list of the thread roots in a given room.
    *
    * Optionally, the returned list may be filtered according to whether the requesting
    * user has participated in the thread.
    *
    * @param roomId The room ID where the thread roots are located.
    *
    * @param include Optional (default `all`) flag to denote which thread roots are of interest to the caller.
    * When `all`, all thread roots found in the room are returned. When `participated`, only
    * thread roots for threads the user has [participated in](/client-server-api/#server-side-aggregation-of-mthread-relationships)
    * will be returned.
    *
    * @param limit Optional limit for the maximum number of thread roots to include per response. Must be an integer
    * greater than zero.
    *
    * Servers should apply a default value, and impose a maximum value to avoid resource exhaustion.
    *
    * @param from A pagination token from a previous result. When not provided, the server starts paginating from
    * the most recent event visible to the user (as per history visibility rules; topologically).
    */
  def getThreadRoots(
      roomId: String,
      include: Option[String] = None,
      limit: Option[Int] = None,
      from: Option[String] = None
  ): ApiRequest[AccessTokenAuthentication, JsObject, GetThreadRoots.OK] =
    ApiRequest(
      endpoint = "/_matrix/client/v1/rooms/{roomId}/threads",
      httpMethod = HttpMethods.GET,
      body = JsObject(),
      bodyFormat = implicitly[RootJsonFormat[JsObject]],
      responseMappings = Seq(
        SingleResponseMapping(200, implicitly[RootJsonFormat[GetThreadRoots.OK]])
      ),
      inQuery = buildQuery(
        fromQueryEntry[Option[String]]("include" -> include),
        fromQueryEntry[Option[Int]]("limit"      -> limit),
        fromQueryEntry[Option[String]]("from"    -> from)
      ),
      inPath = Map(
        "roomId" -> roomId
      ),
      inHeader = Map.empty
    )

}
