/**
  * <h1>matrix-scala</h1>
  * @version 1.0.0
  * @author kirill.sokol@uk-essen.de
  *
  * This file was generated.
  *
  * DO NOT EDIT THIS FILE. Any changes to this file will be overwritten
  * the next time the code is generated. If you need to modify the code
  * generated by this tool, make your changes to the generator script
  * and regenerate the code.
  */

package de.ship.matrixscala.api.clientserver

import de.ship.matrixscala.model.Definitions
import de.ship.matrixscala.model.clientserver.PresenceData._
import de.ship.matrixscala.json.clientserver.PresenceJsonFormats._
import de.ship.matrixscala.json.DefinitionFormats._
import de.ship.matrixscala.core._
import de.ship.matrixscala.core.ResponseMappings._
import de.ship.matrixscala.core.QueryBuilding._
import de.ship.matrixscala.core.HeaderBuilding._
import akka.http.scaladsl.model.HttpMethods
import spray.json.{JsObject, JsValue, RootJsonFormat}
import spray.json.DefaultJsonProtocol._

/**
  * @see "defined in ./build/matrix-spec/data/api/client-server/presence.yaml"
  */
object PresenceApi {

  /**
    * <h1>getPresence</h1>
    *
    * Get the given user's presence state.
    *
    * @param userId The user whose presence state to get.
    */
  def getPresence(
      userId: String
  ): ApiRequest[AccessTokenAuthentication, JsObject, GetPresence.OK] =
    ApiRequest(
      endpoint = "/_matrix/client/v3/presence/{userId}/status",
      httpMethod = HttpMethods.GET,
      body = JsObject(),
      bodyFormat = implicitly[RootJsonFormat[JsObject]],
      responseMappings = Seq(
        SingleResponseMapping(200, implicitly[RootJsonFormat[GetPresence.OK]])
      ),
      inQuery = Map.empty,
      inPath = Map(
        "userId" -> userId
      ),
      inHeader = Map.empty
    )

  /**
    * <h1>setPresence</h1>
    *
    * This API sets the given user's presence state. When setting the status,
    * the activity time is updated to reflect that activity; the client does
    * not need to specify the `last_active_ago` field. You cannot set the
    * presence state of another user.
    *
    * @param userId The user whose presence state to update.
    */
  def setPresence(
      body: SetPresence.Body,
      userId: String
  ): ApiRequest[AccessTokenAuthentication, SetPresence.Body, JsObject] =
    ApiRequest(
      endpoint = "/_matrix/client/v3/presence/{userId}/status",
      httpMethod = HttpMethods.PUT,
      body = body,
      bodyFormat = implicitly[RootJsonFormat[SetPresence.Body]],
      responseMappings = Seq(
        SingleResponseMapping(200, implicitly[RootJsonFormat[JsObject]])
      ),
      inQuery = Map.empty,
      inPath = Map(
        "userId" -> userId
      ),
      inHeader = Map.empty
    )

}
