/**
  * <h1>matrix-scala</h1>
  * @version 1.0.0
  * @author kirill.sokol@uk-essen.de
  *
  * This file was generated.
  *
  * DO NOT EDIT THIS FILE. Any changes to this file will be overwritten
  * the next time the code is generated. If you need to modify the code
  * generated by this tool, make your changes to the generator script
  * and regenerate the code.
  */

package de.ship.matrixscala.model.clientserver

import de.ship.matrixscala.model.Definitions

import de.ship.matrixscala.core._

import spray.json.{JsObject, JsValue}

object SyncData {

  object Sync {

    object OK {

      object Rooms {

        object JoinedRoom {

          /**
            * <h1>RoomSummary</h1>
            *
            *  Information about the room which clients may need to
            * correctly render it to users.
            *
            * @see "defined in ./build/matrix-spec/data/api/client-server/sync.yaml"
            */
          case class RoomSummary(
              `m.heroes`: Option[Seq[String]] = None,
              `m.joined_member_count`: Option[Int] = None,
              `m.invited_member_count`: Option[Int] = None
          )

          /**
            * <h1>UnreadNotificationCounts</h1>
            *
            *  Counts of unread notifications for this room. See the
            * [Receiving notifications](/client-server-api/#receiving-notifications) section
            * for more information on how these are calculated.
            *
            * If `unread_thread_notifications` was specified as `true` on the `RoomEventFilter`,
            * these counts will only be for the main timeline rather than all events in the room.
            * See the [threading module](#threading) for more information.
            *
            * @see "defined in ./build/matrix-spec/data/api/client-server/sync.yaml"
            */
          case class UnreadNotificationCounts(
              highlight_count: Option[Int] = None,
              notification_count: Option[Int] = None
          )

          /**
            * <h1>ThreadNotificationCounts</h1>
            *
            * @see "defined in ./build/matrix-spec/data/api/client-server/sync.yaml"
            */
          case class ThreadNotificationCounts(
              highlight_count: Option[Int] = None,
              notification_count: Option[Int] = None
          )

        }

        /**
          * <h1>JoinedRoom</h1>
          *
          * @see "defined in ./build/matrix-spec/data/api/client-server/sync.yaml"
          */
        case class JoinedRoom(
            summary: Option[Sync.OK.Rooms.JoinedRoom.RoomSummary] = None,
            state: Option[Definitions.StateEventBatch] = None,
            timeline: Option[Definitions.TimelineBatch] = None,
            ephemeral: Option[Definitions.EventBatch] = None,
            account_data: Option[Definitions.EventBatch] = None,
            unread_notifications: Option[Sync.OK.Rooms.JoinedRoom.UnreadNotificationCounts] = None,
            unread_thread_notifications: Option[
              Map[String, Sync.OK.Rooms.JoinedRoom.ThreadNotificationCounts]
            ] = None
        )

        object InvitedRoom {

          /**
            * <h1>InviteState</h1>
            *
            *  The [stripped state](#stripped-state) of a room that the user has been invited
            * to.
            *
            * @see "defined in ./build/matrix-spec/data/api/client-server/sync.yaml"
            */
          case class InviteState(
              events: Option[Seq[Definitions.StrippedStateEvent]] = None
          )

        }

        /**
          * <h1>InvitedRoom</h1>
          *
          * @see "defined in ./build/matrix-spec/data/api/client-server/sync.yaml"
          */
        case class InvitedRoom(
            invite_state: Option[Sync.OK.Rooms.InvitedRoom.InviteState] = None
        )

        object KnockedRoom {

          /**
            * <h1>KnockState</h1>
            *
            *  The [stripped state](#stripped-state) of a room that the user has knocked upon.
            *
            * @see "defined in ./build/matrix-spec/data/api/client-server/sync.yaml"
            */
          case class KnockState(
              events: Option[Seq[Definitions.StrippedStateEvent]] = None
          )

        }

        /**
          * <h1>KnockedRoom</h1>
          *
          * @see "defined in ./build/matrix-spec/data/api/client-server/sync.yaml"
          */
        case class KnockedRoom(
            knock_state: Option[Sync.OK.Rooms.KnockedRoom.KnockState] = None
        )

        /**
          * <h1>LeftRoom</h1>
          *
          * @see "defined in ./build/matrix-spec/data/api/client-server/sync.yaml"
          */
        case class LeftRoom(
            state: Option[Definitions.StateEventBatch] = None,
            timeline: Option[Definitions.TimelineBatch] = None,
            account_data: Option[Definitions.EventBatch] = None
        )

      }

      /**
        * <h1>Rooms</h1>
        *
        *  Updates to rooms.
        *
        * @see "defined in ./build/matrix-spec/data/api/client-server/sync.yaml"
        */
      case class Rooms(
          join: Option[Map[String, Sync.OK.Rooms.JoinedRoom]] = None,
          invite: Option[Map[String, Sync.OK.Rooms.InvitedRoom]] = None,
          knock: Option[Map[String, Sync.OK.Rooms.KnockedRoom]] = None,
          leave: Option[Map[String, Sync.OK.Rooms.LeftRoom]] = None
      )

    }

    /**
      * <h1>OK</h1>
      *
      * @see "defined in ./build/matrix-spec/data/api/client-server/sync.yaml"
      */
    case class OK(
        next_batch: String,
        rooms: Option[Sync.OK.Rooms] = None,
        presence: Option[Definitions.EventBatch] = None,
        account_data: Option[Definitions.EventBatch] = None,
        to_device: Option[JsObject] = None,
        device_lists: Option[JsObject] = None,
        device_one_time_keys_count: Option[Map[String, Int]] = None
    )

  }

}
